Ext.define("Traccar.Style",{singleton:!0,refreshPeriod:6E4,reconnectTimeout:6E4,normalPadding:10,windowWidth:800,windowHeight:600,formFieldWidth:275,dateTimeFormat24:"Y-m-d H:i:s",dateTimeFormat12:"Y-m-d g:i:s a",timeFormat24:"H:i",timeFormat12:"g:i a",dateFormat:"Y-m-d",weekStartDay:1,deviceWidth:400,toastWidth:300,reportHeight:250,columnWidthNormal:100,mapDefaultLat:9.933333,mapDefaultLon:-84.083333,mapDefaultZoom:4,mapRouteColor:"#F06292 #BA68C8 #4DD0E1 #4DB6AC #FF8A65 #A1887F".split(" "),mapRouteWidth:5,
mapTextColor:"rgba(50, 50, 50, 1.0)",mapTextStrokeColor:"rgba(255, 255, 255, 1.0)",mapTextStrokeWidth:2,mapTextOffset:2,mapTextFont:"bold 12px sans-serif",mapColorOnline:"rgba(77, 250, 144, 1.0)",mapColorUnknown:"rgba(250, 190, 77, 1.0)",mapColorOffline:"rgba(255, 162, 173, 1.0)",mapScaleNormal:1,mapScaleSelected:1.5,mapMaxZoom:18,mapDelay:500,mapAccuracyColor:"rgba(96, 96, 96, 1.0)",mapGeofenceTextColor:"rgba(14, 88, 141, 1.0)",mapGeofenceColor:"rgba(21, 127, 204, 1.0)",mapGeofenceOverlayOpacity:.2,
mapGeofenceWidth:5,mapGeofenceRadius:9,coordinatePrecision:6,numberPrecision:2,reportGridStyle:"borderTop: 1px solid lightgray",chartPadding:"20 40 10 10",chartMarkerRadius:3,chartMarkerHighlightScaling:1.5});
Ext.define("Traccar.AttributeFormatter",{singleton:!0,numberFormatterFactory:function(a,b){return function(c){return void 0!==c?Number(c.toFixed(a))+" "+b:null}},coordinateFormatter:function(a,b){return Ext.getStore("CoordinateFormats").formatValue(a,b,Traccar.app.getPreference("coordinateFormat"))},speedFormatter:function(a){return Ext.getStore("SpeedUnits").formatValue(a,Traccar.app.getAttributePreference("speedUnit"))},speedConverter:function(a){return Ext.getStore("SpeedUnits").convertValue(a,
Traccar.app.getAttributePreference("speedUnit"))},courseFormatter:function(a){return"N NE E SE S SW W NW".split(" ")[Math.floor(a/45)]},distanceFormatter:function(a){return Ext.getStore("DistanceUnits").formatValue(a,Traccar.app.getAttributePreference("distanceUnit"))},distanceConverter:function(a){return Ext.getStore("DistanceUnits").convertValue(a,Traccar.app.getAttributePreference("distanceUnit"))},volumeFormatter:function(a){return Ext.getStore("VolumeUnits").formatValue(a,Traccar.app.getAttributePreference("volumeUnit"))},
volumeConverter:function(a){return Ext.getStore("VolumeUnits").convertValue(a,Traccar.app.getAttributePreference("volumeUnit"))},durationFormatter:function(a){return Math.floor(a/36E5)+" "+Strings.sharedHourAbbreviation+" "+Math.floor(a%36E5/6E4)+" "+Strings.sharedMinuteAbbreviation},deviceIdFormatter:function(a){return Ext.getStore("Devices").getById(a).get("name")},groupIdFormatter:function(a){var b;return 0!==a?(b=Ext.getStore("AllGroups"),0===b.getTotalCount()&&(b=Ext.getStore("Groups")),(b=b.getById(a))?
b.get("name"):a):null},geofenceIdFormatter:function(a){var b;return 0!==a?(b=Ext.getStore("AllGeofences"),0===b.getTotalCount()&&(b=Ext.getStore("Geofences")),(a=b.getById(a))?a.get("name"):""):null},calendarIdFormatter:function(a){var b;return 0!==a?(b=Ext.getStore("AllCalendars"),0===b.getTotalCount()&&(b=Ext.getStore("Calendars")),(a=b.getById(a))?a.get("name"):""):null},driverUniqueIdFormatter:function(a){var b;return 0!==a?(b=Ext.getStore("AllDrivers"),0===b.getTotalCount()&&(b=Ext.getStore("Drivers")),
(b=b.findRecord("uniqueId",a,0,!1,!0,!0))?a+" ("+b.get("name")+")":a):null},maintenanceIdFormatter:function(a){var b;return 0!==a?(b=Ext.getStore("AllMaintenances"),0===b.getTotalCount()&&(b=Ext.getStore("Maintenances")),(a=b.getById(a))?a.get("name"):""):null},lastUpdateFormatter:function(a){var b;if(a){a=Math.floor((new Date-a)/1E3);0>a&&(a=0);b=Math.floor(a/86400);if(1<b)return b+" "+Strings.sharedDays;b=Math.floor(a/3600);return 1<b?b+" "+Strings.sharedHours:Math.floor(a/60)+" "+Strings.sharedMinutes}return null},
commandTypeFormatter:function(a){var b=Strings["command"+a.charAt(0).toUpperCase()+a.slice(1)];return b?b:a},defaultFormatter:function(a){return"number"===typeof a?Number(a.toFixed(Traccar.Style.numberPrecision)):"boolean"===typeof a?a?Ext.Msg.buttonText.yes:Ext.Msg.buttonText.no:a instanceof Date?Traccar.app.getPreference("twelveHourFormat",!1)?Ext.Date.format(a,Traccar.Style.dateTimeFormat12):Ext.Date.format(a,Traccar.Style.dateTimeFormat24):a},getFormatter:function(a){var b=this;switch(a){case "latitude":case "longitude":return function(c){return b.coordinateFormatter(a,
c)};case "speed":return this.speedFormatter;case "course":return this.courseFormatter;case "distance":case "accuracy":return this.distanceFormatter;case "duration":return this.durationFormatter;case "deviceId":return this.deviceIdFormatter;case "groupId":return this.groupIdFormatter;case "geofenceId":return this.geofenceIdFormatter;case "maintenanceId":return this.maintenanceIdFormatter;case "calendarId":return this.calendarIdFormatter;case "lastUpdate":return this.lastUpdateFormatter;case "spentFuel":return this.volumeFormatter;
case "driverUniqueId":return this.driverUniqueIdFormatter;case "commandType":return this.commandTypeFormatter;default:return this.defaultFormatter}},getConverter:function(a){switch(a){case "speed":return this.speedConverter;case "distance":case "accuracy":return this.distanceConverter;case "spentFuel":return this.volumeConverter;default:return function(a){return a}}},getAttributeFormatter:function(a){switch(Ext.getStore("PositionAttributes").getAttributeDataType(a)){case "distance":return this.distanceFormatter;
case "speed":return this.speedFormatter;case "driverUniqueId":return this.driverUniqueIdFormatter;case "voltage":return this.numberFormatterFactory(Traccar.Style.numberPrecision,Strings.sharedVoltAbbreviation);case "percentage":return this.numberFormatterFactory(Traccar.Style.numberPrecision,"\x26#37;");case "temperature":return this.numberFormatterFactory(Traccar.Style.numberPrecision,"\x26deg;C");case "volume":return this.volumeFormatter;case "consumption":return this.numberFormatterFactory(Traccar.Style.numberPrecision,
Strings.sharedLiterPerHourAbbreviation);default:return this.defaultFormatter}},getAttributeConverter:function(a){switch(Ext.getStore("PositionAttributes").getAttributeDataType(a)){case "distance":return this.distanceConverter;case "speed":return this.speedConverter;case "volume":return this.volumeConverter;default:return function(a){return a}}},renderAttribute:function(a,b){return b&&"speed"===b.get("dataType")?Ext.getStore("SpeedUnits").formatValue(a,Traccar.app.getAttributePreference("speedUnit",
"kn"),!0):b&&"distance"===b.get("dataType")?Ext.getStore("DistanceUnits").formatValue(a,Traccar.app.getAttributePreference("distanceUnit","km"),!0):a}});
Ext.define("Traccar.model.Server",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"registration",type:"boolean"},{name:"readonly",type:"boolean"},{name:"deviceReadonly",type:"boolean"},{name:"limitCommands",type:"boolean"},{name:"map",type:"string"},{name:"bingKey",type:"string"},{name:"mapUrl",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"},{name:"twelveHourFormat",type:"boolean"},{name:"forceSettings",type:"boolean"},
{name:"coordinateFormat",type:"string"},{name:"poiLayer",type:"string"},{name:"attributes"}],proxy:{type:"ajax",url:"api/server",actionMethods:{update:"PUT"},writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.User",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"login",type:"string"},{name:"email",type:"string"},{name:"password",type:"string"},{name:"phone",type:"string"},{name:"readonly",type:"boolean"},{name:"administrator",type:"boolean"},{name:"map",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"},{name:"twelveHourFormat",type:"boolean"},{name:"coordinateFormat",
type:"string"},{name:"disabled",type:"boolean"},{name:"expirationTime",type:"date",dateFormat:"c"},{name:"deviceLimit",type:"int"},{name:"userLimit",type:"int"},{name:"deviceReadonly",type:"boolean"},{name:"limitCommands",type:"boolean"},{name:"poiLayer",type:"string"},{name:"token",type:"string"},{name:"attributes"}],proxy:{type:"rest",url:"api/users",writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.Group",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"groupId",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.model.Device",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"uniqueId",type:"string"},{name:"phone",type:"string",allowNull:!0},{name:"model",type:"string",allowNull:!0},{name:"contact",type:"string",allowNull:!0},{name:"category",type:"string",allowNull:!0},{name:"status",type:"string",allowNull:!0},{name:"lastUpdate",type:"date",dateFormat:"c"},{name:"groupId",type:"int"},{name:"disabled",type:"boolean"},{name:"geofenceIds"},
{name:"attributes"}]});
Ext.define("Traccar.model.Position",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"protocol",type:"string"},{name:"deviceId",type:"int"},{name:"serverTime",type:"date",dateFormat:"c"},{name:"deviceTime",type:"date",dateFormat:"c"},{name:"fixTime",type:"date",dateFormat:"c"},{name:"valid",type:"boolean"},{name:"accuracy",type:"float",convert:Traccar.AttributeFormatter.getConverter("accuracy")},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"altitude",
type:"float"},{name:"speed",type:"float",convert:Traccar.AttributeFormatter.getConverter("speed")},{name:"course",type:"float"},{name:"address",type:"string"},{name:"attributes"}]});Ext.define("Traccar.model.Attribute",{extend:Ext.data.Model,fields:[{name:"priority",type:"int"},{name:"name",type:"string"},{name:"value"},{name:"attribute",type:"string"}]});
Ext.define("Traccar.model.Command",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"description",type:"string"},{name:"deviceId",type:"int"},{name:"type",type:"string"},{name:"textChannel",type:"boolean"},{name:"attributes"}]});
Ext.define("Traccar.model.Event",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"type",type:"string"},{name:"serverTime",type:"date",dateFormat:"c"},{name:"deviceId",type:"int"},{name:"positionId",type:"int"},{name:"geofenceId",type:"int"},{name:"maintenanceId",type:"int"},{name:"text",convert:function(a,b){var c;"commandResult"===b.get("type")?a=Strings.eventCommandResult+": "+b.get("attributes").result:"alarm"===b.get("type")?(a=b.get("attributes").alarm,a="alarm"+
a.charAt(0).toUpperCase()+a.slice(1),a=Strings[a]||a):a="textMessage"===b.get("type")?Strings.eventTextMessage+": "+b.get("attributes").message:"driverChanged"===b.get("type")?Strings.eventDriverChanged+": "+Traccar.AttributeFormatter.driverUniqueIdFormatter(b.get("attributes").driverUniqueId):Traccar.app.getEventString(b.get("type"));b.get("geofenceId")&&(c=Ext.getStore("Geofences").getById(b.get("geofenceId")))&&(a+=' "'+c.get("name")+'"');b.get("maintenanceId")&&(b=Ext.getStore("Maintenances").getById(b.get("maintenanceId")))&&
(a+=' "'+b.get("name")+'"');return a},depends:["type","attributes","geofenceId","maintenanceId"]},{name:"attributes"}]});Ext.define("Traccar.model.Geofence",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"description",type:"string"},{name:"area",type:"string"},{name:"calendarId",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.model.Notification",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"type",type:"string"},{name:"always",type:"bool"},{name:"attributes"},{name:"web",type:"bool"},{name:"mail",type:"bool"},{name:"sms",type:"bool"},{name:"calendarId",type:"int"}]});
Ext.define("Traccar.model.ReportSummary",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"deviceName",type:"string"},{name:"maxSpeed",type:"float",convert:Traccar.AttributeFormatter.getConverter("speed")},{name:"averageSpeed",type:"float",convert:Traccar.AttributeFormatter.getConverter("speed")},{name:"distance",type:"float",convert:Traccar.AttributeFormatter.getConverter("distance")},{name:"engineHours",type:"int"},{name:"spentFuel",type:"float",convert:Traccar.AttributeFormatter.getConverter("spentFuel")}]});
Ext.define("Traccar.model.ReportTrip",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"deviceName",type:"string"},{name:"maxSpeed",type:"float",convert:Traccar.AttributeFormatter.getConverter("speed")},{name:"averageSpeed",type:"float",convert:Traccar.AttributeFormatter.getConverter("speed")},{name:"distance",type:"float",convert:Traccar.AttributeFormatter.getConverter("distance")},{name:"duration",type:"int"},{name:"startTime",type:"date",dateFormat:"c"},{name:"startAddress",
type:"string"},{name:"endTime",type:"date",dateFormat:"c"},{name:"endAddress",type:"string"},{name:"spentFuel",type:"float",convert:Traccar.AttributeFormatter.getConverter("spentFuel")},{name:"driverUniqueId",type:"string"},{name:"driverName",type:"string"}]});
Ext.define("Traccar.model.ReportStop",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"deviceName",type:"string"},{name:"duration",type:"int"},{name:"startTime",type:"date",dateFormat:"c"},{name:"address",type:"string"},{name:"endTime",type:"date",dateFormat:"c"},{name:"engineHours",type:"int"},{name:"positionId",type:"int"},{name:"spentFuel",type:"float",convert:Traccar.AttributeFormatter.getConverter("spentFuel")}]});
Ext.define("Traccar.model.Calendar",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"data"},{name:"attributes"}]});Ext.define("Traccar.model.KnownAttribute",{extend:Ext.data.Model,idProperty:"key",fields:[{name:"key",type:"string"},{name:"name",type:"string"},{name:"valueType",type:"string"},{name:"dataType",type:"string"}]});
Ext.define("Traccar.model.Driver",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"uniqueId",type:"string"},{name:"attributes"}]});Ext.define("Traccar.model.KnownCommand",{extend:Ext.data.Model,idProperty:"type",fields:[{name:"type",type:"string"},{name:"name",convert:function(a,b){return Traccar.AttributeFormatter.getFormatter("commandType")(b.get("type"))},depends:["type"]},{name:"parameters"}]});
Ext.define("Traccar.model.KnownNotification",{extend:Ext.data.Model,idProperty:"type",fields:[{name:"type",type:"string"},{name:"name",convert:function(a,b){return Traccar.app.getEventString(b.get("type"))},depends:["type"]}]});Ext.define("Traccar.model.Maintenance",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"type",type:"string"},{name:"start",type:"float"},{name:"period",type:"float"},{name:"attributes"}]});
Ext.define("Traccar.store.Groups",{extend:Ext.data.Store,model:"Traccar.model.Group",proxy:{type:"rest",url:"api/groups",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.Devices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"api/devices",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.AllGroups",{extend:Ext.data.Store,model:"Traccar.model.Group",proxy:{type:"rest",url:"api/groups",extraParams:{all:!0}}});
Ext.define("Traccar.store.AllDevices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"api/devices",extraParams:{all:!0}}});Ext.define("Traccar.store.Positions",{extend:Ext.data.Store,model:"Traccar.model.Position",proxy:{type:"rest",url:"api/positions",headers:{Accept:"application/json"}}});Ext.define("Traccar.store.LatestPositions",{extend:Ext.data.Store,model:"Traccar.model.Position"});
Ext.define("Traccar.store.EventPositions",{extend:Ext.data.Store,model:"Traccar.model.Position",trackRemoved:!1,proxy:{type:"rest",url:"api/positions",headers:{Accept:"application/json"}}});Ext.define("Traccar.store.Users",{extend:Ext.data.Store,model:"Traccar.model.User",proxy:{type:"rest",url:"api/users",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.Attributes",{extend:Ext.data.Store,model:"Traccar.model.Attribute",sorters:[{property:"priority"}]});
Ext.define("Traccar.store.MapTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"carto",name:Strings.mapCarto},{key:"osm",name:Strings.mapOsm},{key:"bingRoad",name:Strings.mapBingRoad},{key:"bingAerial",name:Strings.mapBingAerial},{key:"bingHybrid",name:Strings.mapBingHybrid},{key:"baidu",name:Strings.mapBaidu},{key:"yandexMap",name:Strings.mapYandexMap},{key:"yandexSat",name:Strings.mapYandexSat},{key:"wikimedia",name:Strings.mapWikimedia},{key:"custom",name:Strings.mapCustom}]});
Ext.define("Traccar.store.DistanceUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"km",name:Strings.sharedKm,factor:.001},{key:"mi",name:Strings.sharedMi,factor:6.21371E-4},{key:"nmi",name:Strings.sharedNmi,factor:5.39957E-4}],convertValue:function(a,b,c){b||(b="km");b=this.findRecord("key",b);return c?a/b.get("factor"):a*b.get("factor")},formatValue:function(a,b,c){var d;b||(b="km");d=this.findRecord("key",b);return(c?this.convertValue(a,b):a).toFixed(2)+" "+d.get("name")}});
Ext.define("Traccar.store.SpeedUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"kn",name:Strings.sharedKn,factor:1},{key:"kmh",name:Strings.sharedKmh,factor:1.852},{key:"mph",name:Strings.sharedMph,factor:1.15078}],convertValue:function(a,b,c){b||(b="kn");b=this.findRecord("key",b);return c?a/b.get("factor"):a*b.get("factor")},formatValue:function(a,b,c){var d;b||(b="kn");d=this.findRecord("key",b);return(c?this.convertValue(a,b):a).toFixed(1)+" "+d.get("name")}});
Ext.define("Traccar.store.CoordinateFormats",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"dd",name:Strings.sharedDecimalDegrees},{key:"ddm",name:Strings.sharedDegreesDecimalMinutes},{key:"dms",name:Strings.sharedDegreesMinutesSeconds}],formatValue:function(a,b,c){var d;a="latitude"===a?0<=b?"N":"S":0<=b?"E":"W";switch(c){case "ddm":return b=Math.abs(b),c=Math.floor(b),c+"\u00b0 "+(60*(b-c)).toFixed(Traccar.Style.coordinatePrecision)+"' "+a;case "dms":return b=Math.abs(b),c=Math.floor(b),
d=Math.floor(60*(b-c)),b=Math.round(3600*(b-c-d/60)),c+"\u00b0 "+d+"' "+b+'" '+a;default:return b.toFixed(Traccar.Style.coordinatePrecision)+"\u00b0"}}});Ext.define("Traccar.store.CommandTypes",{extend:Ext.data.Store,model:"Traccar.model.KnownCommand",proxy:{type:"rest",url:"api/commands/types",listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.TimeUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"s",name:Strings.sharedSecondAbbreviation,factor:1},{key:"m",name:Strings.sharedMinuteAbbreviation,factor:60},{key:"h",name:Strings.sharedHourAbbreviation,factor:3600}],convertValue:function(a,b,c){b||(b="kn");b=this.findRecord("key",b);return c?a*b.get("factor"):a/b.get("factor")}});
Ext.define("Traccar.store.Languages",{extend:Ext.data.Store,fields:["code","name"],data:function(){var a,b=[];for(a in Locale.languages)Locale.languages.hasOwnProperty(a)&&b.push({code:a,name:Locale.languages[a].name});return b}()});Ext.define("Traccar.store.Events",{extend:Ext.data.Store,model:"Traccar.model.Event",trackRemoved:!1,proxy:{type:"rest",url:"api/events"}});
Ext.define("Traccar.store.Geofences",{extend:Ext.data.Store,model:"Traccar.model.Geofence",proxy:{type:"rest",url:"api/geofences",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.AllGeofences",{extend:Ext.data.Store,model:"Traccar.model.Geofence",proxy:{type:"rest",url:"api/geofences",extraParams:{all:!0}}});Ext.define("Traccar.store.Notifications",{extend:Ext.data.Store,model:"Traccar.model.Notification",proxy:{type:"rest",url:"api/notifications",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllNotifications",{extend:Ext.data.Store,model:"Traccar.model.Notification",proxy:{type:"rest",url:"api/notifications",extraParams:{all:!0}}});Ext.define("Traccar.store.GeofenceTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"Polygon",name:Strings.mapShapePolygon},{key:"Circle",name:Strings.mapShapeCircle},{key:"LineString",name:Strings.mapShapePolyline}]});
Ext.define("Traccar.store.ReportRoute",{extend:Ext.data.Store,model:"Traccar.model.Position",proxy:{type:"rest",url:"api/reports/route",headers:{Accept:"application/json"},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});Ext.define("Traccar.store.ReportEvents",{extend:Ext.data.Store,model:"Traccar.model.Event",proxy:{type:"rest",url:"api/reports/events",headers:{Accept:"application/json"},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.ReportTrips",{extend:Ext.data.Store,model:"Traccar.model.ReportTrip",proxy:{type:"rest",url:"api/reports/trips",headers:{Accept:"application/json"},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});Ext.define("Traccar.store.ReportStops",{extend:Ext.data.Store,model:"Traccar.model.ReportStop",proxy:{type:"rest",url:"api/reports/stops",headers:{Accept:"application/json"},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.ReportSummary",{extend:Ext.data.Store,model:"Traccar.model.ReportSummary",proxy:{type:"rest",url:"api/reports/summary",headers:{Accept:"application/json"},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.ReportTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"route",name:Strings.reportRoute},{key:"events",name:Strings.reportEvents},{key:"trips",name:Strings.reportTrips},{key:"stops",name:Strings.reportStops},{key:"summary",name:Strings.reportSummary},{key:"chart",name:Strings.reportChart}]});Ext.define("Traccar.store.ReportEventTypes",{extend:Ext.data.Store,fields:["type","name"],statics:{allEvents:"allEvents"}});
Ext.define("Traccar.store.ReportChartTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"speed",name:Strings.positionSpeed},{key:"accuracy",name:Strings.positionAccuracy},{key:"altitude",name:Strings.positionAltitude}]});
Ext.define("Traccar.store.ReportPeriods",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"custom",name:Strings.reportCustom},{key:"today",name:Strings.reportToday},{key:"yesterday",name:Strings.reportYesterday},{key:"thisWeek",name:Strings.reportThisWeek},{key:"previousWeek",name:Strings.reportPreviousWeek},{key:"thisMonth",name:Strings.reportThisMonth},{key:"previousMonth",name:Strings.reportPreviousMonth}]});
Ext.define("Traccar.model.Statistics",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"captureTime",type:"date",dateFormat:"c"},{name:"activeUsers",type:"int"},{name:"activeDevices",type:"int"},{name:"requests",type:"int"},{name:"messagesReceived",type:"int"},{name:"messagesStored",type:"int"},{name:"mailSent",type:"int"},{name:"smsSent",type:"int"},{name:"geocoderRequests",type:"int"},{name:"geolocationRequests",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.store.Statistics",{extend:Ext.data.Store,model:"Traccar.model.Statistics",proxy:{type:"rest",url:"api/statistics"}});
Ext.define("Traccar.store.DeviceImages",{extend:Ext.data.Store,fields:"key name svg fillId rotateId scaleId".split(" "),data:function(){var a,b,c=[];for(a=0;a<window.Images.length;a++)b=window.Images[a],c.push({key:b,name:Strings["category"+b.charAt(0).toUpperCase()+b.slice(1)],svg:document.getElementById(b+"Svg").contentDocument,fillId:"arrow"===b?"arrow":"background",rotateId:"arrow"===b?"arrow":"background",scaleId:"arrow"===b?"arrow":"layer1"});return c}()});
Ext.define("Traccar.store.Calendars",{extend:Ext.data.Store,model:"Traccar.model.Calendar",proxy:{type:"rest",url:"api/calendars",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.AllCalendars",{extend:Ext.data.Store,model:"Traccar.model.Calendar",proxy:{type:"rest",url:"api/calendars",extraParams:{all:!0}}});
Ext.define("Traccar.store.AllTimezones",{extend:Ext.data.Store,fields:["key"],sorters:{property:"key",direction:"ASC"},data:[{key:"Africa/Abidjan"},{key:"Africa/Accra"},{key:"Africa/Bissau"},{key:"Africa/Casablanca"},{key:"Africa/El_Aaiun"},{key:"Africa/Monrovia"},{key:"America/Danmarkshavn"},{key:"Antarctica/Troll"},{key:"Atlantic/Canary"},{key:"Atlantic/Faroe"},{key:"Atlantic/Madeira"},{key:"Atlantic/Reykjavik"},{key:"GMT"},{key:"Etc/GMT"},{key:"Etc/UCT"},{key:"Etc/UTC"},{key:"Europe/Dublin"},{key:"Europe/Lisbon"},
{key:"Europe/London"},{key:"WET"},{key:"Africa/Algiers"},{key:"Africa/Ceuta"},{key:"Africa/Lagos"},{key:"Africa/Ndjamena"},{key:"Africa/Tunis"},{key:"Africa/Windhoek"},{key:"CET"},{key:"Etc/GMT-1"},{key:"Europe/Amsterdam"},{key:"Europe/Andorra"},{key:"Europe/Belgrade"},{key:"Europe/Berlin"},{key:"Europe/Brussels"},{key:"Europe/Budapest"},{key:"Europe/Copenhagen"},{key:"Europe/Gibraltar"},{key:"Europe/Luxembourg"},{key:"Europe/Madrid"},{key:"Europe/Malta"},{key:"Europe/Monaco"},{key:"Europe/Oslo"},
{key:"Europe/Paris"},{key:"Europe/Prague"},{key:"Europe/Rome"},{key:"Europe/Stockholm"},{key:"Europe/Tirane"},{key:"Europe/Vienna"},{key:"Europe/Warsaw"},{key:"Europe/Zurich"},{key:"MET"},{key:"Africa/Cairo"},{key:"Africa/Johannesburg"},{key:"Africa/Maputo"},{key:"Africa/Tripoli"},{key:"Asia/Amman"},{key:"Asia/Beirut"},{key:"Asia/Damascus"},{key:"Asia/Gaza"},{key:"Asia/Hebron"},{key:"Asia/Jerusalem"},{key:"Asia/Nicosia"},{key:"EET"},{key:"Etc/GMT-2"},{key:"Europe/Athens"},{key:"Europe/Bucharest"},
{key:"Europe/Chisinau"},{key:"Europe/Helsinki"},{key:"Europe/Kaliningrad"},{key:"Europe/Kiev"},{key:"Europe/Riga"},{key:"Europe/Sofia"},{key:"Europe/Tallinn"},{key:"Europe/Uzhgorod"},{key:"Europe/Vilnius"},{key:"Europe/Zaporozhye"},{key:"Africa/Khartoum"},{key:"Africa/Nairobi"},{key:"Antarctica/Syowa"},{key:"Asia/Baghdad"},{key:"Asia/Famagusta"},{key:"Asia/Qatar"},{key:"Asia/Riyadh"},{key:"Etc/GMT-3"},{key:"Europe/Istanbul"},{key:"Europe/Kirov"},{key:"Europe/Minsk"},{key:"Europe/Moscow"},{key:"Europe/Simferopol"},
{key:"Europe/Volgograd"},{key:"Asia/Tehran"},{key:"Asia/Baku"},{key:"Asia/Dubai"},{key:"Asia/Tbilisi"},{key:"Asia/Yerevan"},{key:"Etc/GMT-4"},{key:"Europe/Astrakhan"},{key:"Europe/Samara"},{key:"Europe/Saratov"},{key:"Europe/Ulyanovsk"},{key:"Indian/Mahe"},{key:"Indian/Mauritius"},{key:"Indian/Reunion"},{key:"Asia/Kabul"},{key:"Antarctica/Mawson"},{key:"Asia/Aqtau"},{key:"Asia/Aqtobe"},{key:"Asia/Ashgabat"},{key:"Asia/Atyrau"},{key:"Asia/Dushanbe"},{key:"Asia/Karachi"},{key:"Asia/Oral"},{key:"Asia/Samarkand"},
{key:"Asia/Tashkent"},{key:"Asia/Yekaterinburg"},{key:"Etc/GMT-5"},{key:"Indian/Kerguelen"},{key:"Indian/Maldives"},{key:"Asia/Colombo"},{key:"Asia/Kolkata"},{key:"Asia/Kathmandu"},{key:"Antarctica/Vostok"},{key:"Asia/Almaty"},{key:"Asia/Bishkek"},{key:"Asia/Dhaka"},{key:"Asia/Omsk"},{key:"Asia/Qyzylorda"},{key:"Asia/Thimphu"},{key:"Asia/Urumqi"},{key:"Etc/GMT-6"},{key:"Indian/Chagos"},{key:"Asia/Yangon"},{key:"Indian/Cocos"},{key:"Antarctica/Davis"},{key:"Asia/Bangkok"},{key:"Asia/Barnaul"},{key:"Asia/Ho_Chi_Minh"},
{key:"Asia/Hovd"},{key:"Asia/Jakarta"},{key:"Asia/Krasnoyarsk"},{key:"Asia/Novokuznetsk"},{key:"Asia/Novosibirsk"},{key:"Asia/Pontianak"},{key:"Asia/Tomsk"},{key:"Etc/GMT-7"},{key:"Indian/Christmas"},{key:"Asia/Brunei"},{key:"Asia/Choibalsan"},{key:"Asia/Hong_Kong"},{key:"Asia/Irkutsk"},{key:"Asia/Kuala_Lumpur"},{key:"Asia/Kuching"},{key:"Asia/Macau"},{key:"Asia/Makassar"},{key:"Asia/Manila"},{key:"Asia/Shanghai"},{key:"Asia/Singapore"},{key:"Asia/Taipei"},{key:"Asia/Ulaanbaatar"},{key:"Australia/Perth"},
{key:"Etc/GMT-8"},{key:"Asia/Pyongyang"},{key:"Australia/Eucla"},{key:"Asia/Chita"},{key:"Asia/Dili"},{key:"Asia/Jayapura"},{key:"Asia/Khandyga"},{key:"Asia/Seoul"},{key:"Asia/Tokyo"},{key:"Asia/Yakutsk"},{key:"Etc/GMT-9"},{key:"Pacific/Palau"},{key:"Australia/Adelaide"},{key:"Australia/Broken_Hill"},{key:"Australia/Darwin"},{key:"Antarctica/DumontDUrville"},{key:"Asia/Ust-Nera"},{key:"Asia/Vladivostok"},{key:"Australia/Brisbane"},{key:"Australia/Currie"},{key:"Australia/Hobart"},{key:"Australia/Lindeman"},
{key:"Australia/Melbourne"},{key:"Australia/Sydney"},{key:"Etc/GMT-10"},{key:"Pacific/Chuuk"},{key:"Pacific/Guam"},{key:"Pacific/Port_Moresby"},{key:"Australia/Lord_Howe"},{key:"Antarctica/Casey"},{key:"Antarctica/Macquarie"},{key:"Asia/Magadan"},{key:"Asia/Sakhalin"},{key:"Asia/Srednekolymsk"},{key:"Etc/GMT-11"},{key:"Pacific/Bougainville"},{key:"Pacific/Efate"},{key:"Pacific/Guadalcanal"},{key:"Pacific/Kosrae"},{key:"Pacific/Norfolk"},{key:"Pacific/Noumea"},{key:"Pacific/Pohnpei"},{key:"Asia/Anadyr"},
{key:"Asia/Kamchatka"},{key:"Etc/GMT-12"},{key:"Pacific/Auckland"},{key:"Pacific/Fiji"},{key:"Pacific/Funafuti"},{key:"Pacific/Kwajalein"},{key:"Pacific/Majuro"},{key:"Pacific/Nauru"},{key:"Pacific/Tarawa"},{key:"Pacific/Wake"},{key:"Pacific/Wallis"},{key:"Pacific/Chatham"},{key:"Etc/GMT-13"},{key:"Pacific/Apia"},{key:"Pacific/Enderbury"},{key:"Pacific/Fakaofo"},{key:"Pacific/Tongatapu"},{key:"Etc/GMT-14"},{key:"Pacific/Kiritimati"},{key:"America/Scoresbysund"},{key:"Atlantic/Azores"},{key:"Atlantic/Cape_Verde"},
{key:"Etc/GMT+1"},{key:"America/Noronha"},{key:"Atlantic/South_Georgia"},{key:"Etc/GMT+2"},{key:"America/Araguaina"},{key:"America/Argentina/Buenos_Aires"},{key:"America/Argentina/Catamarca"},{key:"America/Argentina/Cordoba"},{key:"America/Argentina/Jujuy"},{key:"America/Argentina/La_Rioja"},{key:"America/Argentina/Mendoza"},{key:"America/Argentina/Rio_Gallegos"},{key:"America/Argentina/Salta"},{key:"America/Argentina/San_Juan"},{key:"America/Argentina/San_Luis"},{key:"America/Argentina/Tucuman"},
{key:"America/Argentina/Ushuaia"},{key:"America/Bahia"},{key:"America/Belem"},{key:"America/Cayenne"},{key:"America/Fortaleza"},{key:"America/Godthab"},{key:"America/Maceio"},{key:"America/Miquelon"},{key:"America/Montevideo"},{key:"America/Paramaribo"},{key:"America/Recife"},{key:"America/Santarem"},{key:"America/Sao_Paulo"},{key:"Antarctica/Rothera"},{key:"Atlantic/Stanley"},{key:"Etc/GMT+3"},{key:"America/St_Johns"},{key:"America/Asuncion"},{key:"America/Barbados"},{key:"America/Blanc-Sablon"},
{key:"America/Boa_Vista"},{key:"America/Campo_Grande"},{key:"America/Caracas"},{key:"America/Cuiaba"},{key:"America/Curacao"},{key:"America/Glace_Bay"},{key:"America/Goose_Bay"},{key:"America/Grand_Turk"},{key:"America/Guyana"},{key:"America/Halifax"},{key:"America/La_Paz"},{key:"America/Manaus"},{key:"America/Martinique"},{key:"America/Moncton"},{key:"America/Port_of_Spain"},{key:"America/Porto_Velho"},{key:"America/Puerto_Rico"},{key:"America/Santiago"},{key:"America/Santo_Domingo"},{key:"America/Thule"},
{key:"Antarctica/Palmer"},{key:"Atlantic/Bermuda"},{key:"Etc/GMT+4"},{key:"America/Atikokan"},{key:"America/Bogota"},{key:"America/Cancun"},{key:"America/Detroit"},{key:"America/Eirunepe"},{key:"America/Guayaquil"},{key:"America/Havana"},{key:"America/Indiana/Indianapolis"},{key:"America/Indiana/Marengo"},{key:"America/Indiana/Petersburg"},{key:"America/Indiana/Vevay"},{key:"America/Indiana/Vincennes"},{key:"America/Indiana/Winamac"},{key:"America/Iqaluit"},{key:"America/Jamaica"},{key:"America/Kentucky/Louisville"},
{key:"America/Kentucky/Monticello"},{key:"America/Lima"},{key:"America/Nassau"},{key:"America/New_York"},{key:"America/Nipigon"},{key:"America/Panama"},{key:"America/Pangnirtung"},{key:"America/Port-au-Prince"},{key:"America/Rio_Branco"},{key:"America/Thunder_Bay"},{key:"America/Toronto"},{key:"EST"},{key:"EST5EDT"},{key:"Etc/GMT+5"},{key:"America/Bahia_Banderas"},{key:"America/Belize"},{key:"America/Chicago"},{key:"America/Costa_Rica"},{key:"America/El_Salvador"},{key:"America/Guatemala"},{key:"America/Indiana/Knox"},
{key:"America/Indiana/Tell_City"},{key:"America/Managua"},{key:"America/Matamoros"},{key:"America/Menominee"},{key:"America/Merida"},{key:"America/Mexico_City"},{key:"America/Monterrey"},{key:"America/North_Dakota/Beulah"},{key:"America/North_Dakota/Center"},{key:"America/North_Dakota/New_Salem"},{key:"America/Rainy_River"},{key:"America/Rankin_Inlet"},{key:"America/Regina"},{key:"America/Resolute"},{key:"America/Swift_Current"},{key:"America/Tegucigalpa"},{key:"America/Winnipeg"},{key:"CST6CDT"},
{key:"Etc/GMT+6"},{key:"Pacific/Easter"},{key:"Pacific/Galapagos"},{key:"America/Boise"},{key:"America/Cambridge_Bay"},{key:"America/Chihuahua"},{key:"America/Creston"},{key:"America/Dawson_Creek"},{key:"America/Denver"},{key:"America/Edmonton"},{key:"America/Fort_Nelson"},{key:"America/Hermosillo"},{key:"America/Inuvik"},{key:"America/Mazatlan"},{key:"America/Ojinaga"},{key:"America/Phoenix"},{key:"America/Yellowknife"},{key:"Etc/GMT+7"},{key:"MST"},{key:"MST7MDT"},{key:"America/Dawson"},{key:"America/Los_Angeles"},
{key:"America/Tijuana"},{key:"America/Vancouver"},{key:"America/Whitehorse"},{key:"Etc/GMT+8"},{key:"Pacific/Pitcairn"},{key:"PST8PDT"},{key:"America/Anchorage"},{key:"America/Juneau"},{key:"America/Metlakatla"},{key:"America/Nome"},{key:"America/Sitka"},{key:"America/Yakutat"},{key:"Etc/GMT+9"},{key:"Pacific/Gambier"},{key:"Pacific/Marquesas"},{key:"America/Adak"},{key:"Etc/GMT+10"},{key:"HST"},{key:"Pacific/Honolulu"},{key:"Pacific/Rarotonga"},{key:"Pacific/Tahiti"},{key:"Etc/GMT+11"},{key:"Pacific/Niue"},
{key:"Pacific/Pago_Pago"},{key:"Etc/GMT+12"}]});Ext.define("Traccar.store.VisibleDevices",{extend:Ext.data.ChainedStore,source:"Devices"});Ext.define("Traccar.store.DeviceStatuses",{extend:Ext.data.Store,fields:["id","name","color"],data:[{id:"online",name:Strings.deviceStatusOnline,color:"view-color-green"},{id:"offline",name:Strings.deviceStatusOffline,color:"view-color-red"},{id:"unknown",name:Strings.deviceStatusUnknown,color:"view-color-yellow"}]});
Ext.define("Traccar.store.CommonDeviceAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[{key:"speedLimit",name:Strings.attributeSpeedLimit,valueType:"number",dataType:"speed"},{key:"report.ignoreOdometer",name:Strings.attributeReportIgnoreOdometer,valueType:"boolean"}]});
Ext.define("Traccar.store.DeviceAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[{key:"web.reportColor",name:Strings.attributeWebReportColor,valueType:"color"},{key:"devicePassword",name:Strings.attributeDevicePassword,valueType:"string"},{key:"processing.copyAttributes",name:Strings.attributeProcessingCopyAttributes,valueType:"string"},{key:"decoder.timezone",name:Strings.sharedTimezone,valueType:"string",dataType:"timezone"}]});
Ext.define("Traccar.store.GeofenceAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",proxy:"memory",data:[{key:"color",name:Strings.attributeColor,valueType:"color"},{key:"speedLimit",name:Strings.attributeSpeedLimit,valueType:"number",dataType:"speed"},{key:"polylineDistance",name:Strings.attributePolylineDistance,valueType:"number",dataType:"distance"}]});
Ext.define("Traccar.store.GroupAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[{key:"processing.copyAttributes",name:Strings.attributeProcessingCopyAttributes,valueType:"string"},{key:"decoder.timezone",name:Strings.sharedTimezone,valueType:"string",dataType:"timezone"}]});Ext.define("Traccar.store.ServerAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[]});
Ext.define("Traccar.store.CommonUserAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[{key:"web.liveRouteLength",name:Strings.attributeWebLiveRouteLength,valueType:"number",allowDecimals:!1},{key:"web.selectZoom",name:Strings.attributeWebSelectZoom,valueType:"number",allowDecimals:!1,minValue:Traccar.Style.mapDefaultZoom,maxValue:Traccar.Style.mapMaxZoom},{key:"web.maxZoom",name:Strings.attributeWebMaxZoom,valueType:"number",allowDecimals:!1,minValue:Traccar.Style.mapDefaultZoom,
maxValue:Traccar.Style.mapMaxZoom},{key:"ui.disableReport",name:Strings.attributeUiDisableReport,valueType:"boolean"},{key:"ui.disableEvents",name:Strings.attributeUiDisableEvents,valueType:"boolean"},{key:"ui.disableVehicleFetures",name:Strings.attributeUiDisableVehicleFetures,valueType:"boolean"},{key:"ui.disableDrivers",name:Strings.attributeUiDisableDrivers,valueType:"boolean"},{key:"ui.disableComputedAttributes",name:Strings.attributeUiDisableComputedAttributes,valueType:"boolean"},{key:"ui.disableCalendars",
name:Strings.attributeUiDisableCalendars,valueType:"boolean"},{key:"ui.disableMaintenances",name:Strings.attributeUiDisableMaintenances,valueType:"boolean"},{key:"ui.hidePositionAttributes",name:Strings.attributeUiHidePositionAttributes,valueType:"string"},{key:"distanceUnit",name:Strings.settingsDistanceUnit,valueType:"string",dataType:"distanceUnit"},{key:"speedUnit",name:Strings.settingsSpeedUnit,valueType:"string",dataType:"speedUnit"},{key:"volumeUnit",name:Strings.settingsVolumeUnit,valueType:"string",
dataType:"volumeUnit"},{key:"timezone",name:Strings.sharedTimezone,valueType:"string",dataType:"timezone"}]});
Ext.define("Traccar.store.UserAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",data:[{key:"mail.smtp.host",name:Strings.attributeMailSmtpHost,valueType:"string"},{key:"mail.smtp.port",name:Strings.attributeMailSmtpPort,valueType:"number",allowDecimals:!1,minValue:1,maxValue:65535},{key:"mail.smtp.starttls.enable",name:Strings.attributeMailSmtpStarttlsEnable,valueType:"boolean"},{key:"mail.smtp.starttls.required",name:Strings.attributeMailSmtpStarttlsRequired,valueType:"boolean"},
{key:"mail.smtp.ssl.enable",name:Strings.attributeMailSmtpSslEnable,valueType:"boolean"},{key:"mail.smtp.ssl.trust",name:Strings.attributeMailSmtpSslTrust,valueType:"string"},{key:"mail.smtp.ssl.protocols",name:Strings.attributeMailSmtpSslProtocols,valueType:"string"},{key:"mail.smtp.from",name:Strings.attributeMailSmtpFrom,valueType:"string"},{key:"mail.smtp.auth",name:Strings.attributeMailSmtpAuth,valueType:"boolean"},{key:"mail.smtp.username",name:Strings.attributeMailSmtpUsername,valueType:"string"},
{key:"mail.smtp.password",name:Strings.attributeMailSmtpPassword,valueType:"string"}]});Ext.define("Traccar.model.ComputedAttribute",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"description",type:"string"},{name:"type",type:"string"},{name:"attribute",type:"string"},{name:"expression",type:"string"}]});Ext.define("Traccar.store.ComputedAttributes",{extend:Ext.data.Store,model:"Traccar.model.ComputedAttribute",proxy:{type:"rest",url:"api/attributes/computed",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllComputedAttributes",{extend:Ext.data.Store,model:"Traccar.model.ComputedAttribute",proxy:{type:"rest",url:"api/attributes/computed",extraParams:{all:!0}}});
Ext.define("Traccar.store.PositionAttributes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute",proxy:"memory",data:[{key:"raw",name:Strings.positionRaw,valueType:"string"},{key:"index",name:Strings.positionIndex,valueType:"number"},{key:"hdop",name:Strings.positionHdop,valueType:"number"},{key:"vdop",name:Strings.positionVdop,valueType:"number"},{key:"pdop",name:Strings.positionPdop,valueType:"number"},{key:"sat",name:Strings.positionSat,valueType:"number"},{key:"satVisible",name:Strings.positionSatVisible,
valueType:"number"},{key:"rssi",name:Strings.positionRssi,valueType:"number"},{key:"gps",name:Strings.positionGps,valueType:"number"},{key:"roaming",name:Strings.positionRoaming,valueType:"boolean"},{key:"event",name:Strings.positionEvent,valueType:"string"},{key:"alarm",name:Strings.positionAlarm,valueType:"string"},{key:"status",name:Strings.positionStatus,valueType:"string"},{key:"odometer",name:Strings.positionOdometer,valueType:"number",dataType:"distance"},{key:"serviceOdometer",name:Strings.positionServiceOdometer,
valueType:"number",dataType:"distance"},{key:"tripOdometer",name:Strings.positionTripOdometer,valueType:"number",dataType:"distance"},{key:"hours",name:Strings.positionHours,valueType:"string"},{key:"steps",name:Strings.positionSteps,valueType:"number"},{key:"input",name:Strings.positionInput,valueType:"string"},{key:"output",name:Strings.positionOutput,valueType:"string"},{key:"power",name:Strings.positionPower,valueType:"number",dataType:"voltage"},{key:"battery",name:Strings.positionBattery,valueType:"number",
dataType:"voltage"},{key:"batteryLevel",name:Strings.positionBatteryLevel,valueType:"number",dataType:"percentage"},{key:"fuel",name:Strings.positionFuel,valueType:"number",dataType:"volume"},{key:"fuelConsumption",name:Strings.positionFuelConsumption,valueType:"number",dataType:"consumption"},{key:"versionFw",name:Strings.positionVersionFw,valueType:"string"},{key:"versionHw",name:Strings.positionVersionHw,valueType:"string"},{key:"type",name:Strings.sharedType,valueType:"string"},{key:"ignition",
name:Strings.positionIgnition,valueType:"boolean"},{key:"flags",name:Strings.positionFlags,valueType:"string"},{key:"charge",name:Strings.positionCharge,valueType:"boolean"},{key:"ip",name:Strings.positionIp,valueType:"string"},{key:"archive",name:Strings.positionArchive,valueType:"boolean"},{key:"distance",name:Strings.positionDistance,valueType:"number",dataType:"distance"},{key:"totalDistance",name:Strings.deviceTotalDistance,valueType:"number",dataType:"distance"},{key:"rpm",name:Strings.positionRpm,
valueType:"number"},{key:"vin",name:Strings.positionVin,valueType:"string"},{key:"approximate",name:Strings.positionApproximate,valueType:"boolean"},{key:"throttle",name:Strings.positionThrottle,valueType:"number"},{key:"motion",name:Strings.positionMotion,valueType:"boolean"},{key:"armed",name:Strings.positionArmed,valueType:"number"},{key:"geofence",name:Strings.sharedGeofence,valueType:"string"},{key:"acceleration",name:Strings.positionAcceleration,valueType:"number"},{key:"deviceTemp",name:Strings.positionDeviceTemp,
valueType:"number",dataType:"temperature"},{key:"operator",name:Strings.positionOperator,valueType:"string"},{key:"command",name:Strings.deviceCommand,valueType:"string"},{key:"blocked",name:Strings.positionBlocked,valueType:"boolean"},{key:"dtcs",name:Strings.positionDtcs,valueType:"string"},{key:"obdSpeed",name:Strings.positionObdSpeed,valueType:"number",dataType:"speed"},{key:"obdOdometer",name:Strings.positionObdOdometer,valueType:"number",dataType:"distance"},{key:"result",name:Strings.eventCommandResult,
valueType:"string"},{key:"driverUniqueId",name:Strings.positionDriverUniqueId,valueType:"string",dataType:"driverUniqueId"}],getAttributeName:function(a,b){var c=this.getById(a);return c?c.get("name"):b?a.replace(/^./,function(a){return a.toUpperCase()}):a},getAttributeDataType:function(a){return(a=this.getById(a))&&a.get("dataType")?a.get("dataType"):null}});
Ext.define("Traccar.store.AttributeValueTypes",{extend:Ext.data.Store,fields:["id","name"],proxy:"memory",data:[{id:"string",name:Strings.sharedTypeString},{id:"number",name:Strings.sharedTypeNumber},{id:"boolean",name:Strings.sharedTypeBoolean}]});Ext.define("Traccar.store.Drivers",{extend:Ext.data.Store,model:"Traccar.model.Driver",proxy:{type:"rest",url:"api/drivers",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllDrivers",{extend:Ext.data.Store,model:"Traccar.model.Driver",proxy:{type:"rest",url:"api/drivers",extraParams:{all:!0}}});
Ext.define("Traccar.store.KnownCommands",{extend:Ext.data.Store,model:"Traccar.model.KnownCommand",data:[{type:"custom",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"positionPeriodic",parameters:[{key:"frequency",name:Strings.commandFrequency,valueType:"number",allowDecimals:!1,minValue:0,dataType:"frequency"}]},{type:"setTimezone",parameters:[{key:"timezoneName",name:Strings.commandTimezone,valueType:"string",dataType:"timezone"}]},{type:"sendSms",parameters:[{key:"phone",
name:Strings.commandPhone,valueType:"string"},{key:"message",name:Strings.commandMessage,valueType:"string"}]},{type:"sendUssd",parameters:[{key:"phone",name:Strings.commandPhone,valueType:"string"}]},{type:"sosNumber",parameters:[{key:"index",name:Strings.commandIndex,valueType:"number",allowDecimals:!1,minValue:0},{key:"phone",name:Strings.commandPhone,valueType:"string"}]},{type:"silenceTime",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"setPhonebook",parameters:[{key:"data",
name:Strings.commandData,valueType:"string"}]},{type:"voiceMessage",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"outputControl",parameters:[{key:"index",name:Strings.commandIndex,valueType:"number",allowDecimals:!1,minValue:0},{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"voiceMonitoring",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},{type:"setAgps",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},
{type:"setIndicator",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"configuration",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"setConnection",parameters:[{key:"server",name:Strings.commandServer,valueType:"string"},{key:"port",name:Strings.commandPort,valueType:"number",allowDecimals:!1,minValue:1,maxValue:65535}]},{type:"setOdometer",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"modePowerSaving",parameters:[{key:"enable",
name:Strings.commandEnable,valueType:"boolean"}]},{type:"modeDeepSleep",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},{type:"movementAlarm",parameters:[{key:"radius",name:Strings.commandRadius,valueType:"number",allowDecimals:!1,minValue:0}]},{type:"alarmBattery",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},{type:"alarmSos",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},{type:"alarmRemove",parameters:[{key:"enable",
name:Strings.commandEnable,valueType:"boolean"}]},{type:"alarmClock",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"alarmSpeed",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]},{type:"alarmFall",parameters:[{key:"enable",name:Strings.commandEnable,valueType:"boolean"}]},{type:"alarmVibration",parameters:[{key:"data",name:Strings.commandData,valueType:"string"}]}]});
Ext.define("Traccar.store.VolumeUnits",{extend:Ext.data.Store,fields:["key","name","fullName","factor"],data:[{key:"ltr",name:Strings.sharedLiterAbbreviation,fullName:Strings.sharedLiter,factor:1},{key:"impGal",name:Strings.sharedGallonAbbreviation,fullName:Strings.sharedImpGallon,factor:4.546},{key:"usGal",name:Strings.sharedGallonAbbreviation,fullName:Strings.sharedUsGallon,factor:3.785}],convertValue:function(a,b,c){b||(b="ltr");b=this.findRecord("key",b);return c?a*b.get("factor"):a/b.get("factor")},
formatValue:function(a,b,c){var d;b||(b="ltr");d=this.findRecord("key",b);return(c?this.convertValue(a,b):a).toFixed(1)+" "+d.get("name")}});Ext.define("Traccar.store.AllCommandTypes",{extend:Ext.data.Store,model:"Traccar.model.KnownCommand",proxy:{type:"rest",url:"api/commands/types",listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});Ext.define("Traccar.store.Commands",{extend:Ext.data.Store,model:"Traccar.model.Command",proxy:{type:"rest",url:"api/commands",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllCommands",{extend:Ext.data.Store,model:"Traccar.model.Command",proxy:{type:"rest",url:"api/commands",extraParams:{all:!0}}});Ext.define("Traccar.store.DeviceCommands",{extend:Ext.data.Store,model:"Traccar.model.Command",proxy:{type:"rest",url:"api/commands/send",listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.AllNotificationTypes",{extend:Ext.data.Store,model:"Traccar.model.KnownNotification",proxy:{type:"rest",url:"api/notifications/types",listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});Ext.define("Traccar.store.Maintenances",{extend:Ext.data.Store,model:"Traccar.model.Maintenance",proxy:{type:"rest",url:"api/maintenances",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllMaintenances",{extend:Ext.data.Store,model:"Traccar.model.Maintenance",proxy:{type:"rest",url:"api/maintenances",extraParams:{all:!0}}});Ext.define("Traccar.store.MaintenanceTypes",{extend:Ext.data.Store,model:"Traccar.model.KnownAttribute"});
Ext.define("Traccar.view.dialog.Base",{extend:Ext.window.Window,bodyPadding:Traccar.Style.normalPadding,resizable:!1,scrollable:!0,constrain:!0,initComponent:function(){window.innerHeight&&(this.maxHeight=window.innerHeight-2*Traccar.Style.normalPadding);this.callParent()}});
Ext.define("Traccar.view.dialog.RegisterController",{extend:Ext.app.ViewController,alias:"controller.register",onCreateClick:function(){var a=this.lookupReference("form");a.isValid()&&Ext.Ajax.request({scope:this,method:"POST",url:"api/users",jsonData:a.getValues(),callback:this.onCreateReturn})},onCreateReturn:function(a,b,c){b?(this.closeView(),Traccar.app.showToast(Strings.loginCreated)):Traccar.app.showError(c)}});
Ext.define("Traccar.view.dialog.Register",{extend:Traccar.view.dialog.Base,controller:"register",title:Strings.loginRegister,items:{xtype:"form",reference:"form",jsonSubmit:!0,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,validator:function(a){return/(.+)@(.+)\.(.{2,})/.test(a)?!0:Ext.form.field.VTypes.emailText},allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",
allowBlank:!1}]},buttons:[{text:Strings.sharedSave,handler:"onCreateClick"},{text:Strings.sharedCancel,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.LoginController",{extend:Ext.app.ViewController,alias:"controller.login",init:function(){this.lookupReference("registerButton").setDisabled(!Traccar.app.getServer().get("registration"));this.lookupReference("languageField").setValue(Locale.language)},login:function(){var a=this.lookupReference("form");a.isValid()&&(Ext.get("spinner").setVisible(!0),this.getView().setVisible(!1),Ext.Ajax.request({scope:this,method:"POST",url:"api/session",params:a.getValues(),callback:function(a,
c,d){Ext.get("spinner").setVisible(!1);c?(this.lookupReference("rememberField").getValue()&&(a=Ext.util.Base64.encode(this.lookupReference("userField").getValue()),c=Ext.util.Base64.encode(this.lookupReference("passwordField").getValue()),Ext.util.Cookies.set("user",a,Ext.Date.add(new Date,Ext.Date.YEAR,1)),Ext.util.Cookies.set("password",c,Ext.Date.add(new Date,Ext.Date.YEAR,1))),Traccar.app.setUser(Ext.decode(d.responseText)),this.fireViewEvent("login")):(this.getView().setVisible(!0),401===d.status?
Traccar.app.showError(Strings.loginFailed):Traccar.app.showError(d.responseText))}}))},logout:function(){Ext.util.Cookies.clear("user");Ext.util.Cookies.clear("password");Ext.Ajax.request({scope:this,method:"DELETE",url:"api/session",callback:function(){window.location.reload()}})},onSelectLanguage:function(a){var b,c;a=a.getValue();b=window.location.href;0<=b.indexOf("locale\x3d")?(c=b.substring(0,b.indexOf("locale")),b=b.substring(b.indexOf("locale")),b=b.substring(b.indexOf("\x3d")+1),b=0<=b.indexOf("\x26")?
b.substring(b.indexOf("\x26")):"",b=c+"locale\x3d"+a+b):b=0>b.indexOf("?")?b+("?locale\x3d"+a):b+("\x26locale\x3d"+a);window.location.href=b},onAfterRender:function(a){a.focus()},onSpecialKey:function(a,b){b.getKey()===b.ENTER&&this.login()},onLoginClick:function(){Ext.getElementById("submitButton").click();this.login()},onRegisterClick:function(){Ext.create("Traccar.view.dialog.Register").show()}});
Ext.define("Traccar.view.dialog.Login",{extend:Traccar.view.dialog.Base,alias:"widget.login",controller:"login",header:!1,closable:!1,items:{xtype:"form",reference:"form",autoEl:{tag:"form",method:"POST",action:"fake-login.html",target:"submitTarget"},items:[{xtype:"image",src:"logo.svg",alt:Strings.loginLogo,width:240,height:64,style:{display:"block",margin:"10px auto 25px"}},{xtype:"combobox",name:"language",fieldLabel:Strings.loginLanguage,store:"Languages",displayField:"name",valueField:"code",
editable:!1,submitValue:!1,listeners:{select:"onSelectLanguage"},reference:"languageField"},{xtype:"textfield",name:"email",reference:"userField",fieldLabel:Strings.userEmail,allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey",afterrender:"onAfterRender"},inputAttrTpl:['autocomplete\x3d"on" autocapitalize\x3d"none"']},{xtype:"textfield",name:"password",reference:"passwordField",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey"},
inputAttrTpl:['autocomplete\x3d"on"']},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,reference:"rememberField",fieldLabel:Strings.userRemember},{xtype:"component",html:'\x3ciframe id\x3d"submitTarget" name\x3d"submitTarget" style\x3d"display:none"\x3e\x3c/iframe\x3e'},{xtype:"component",html:'\x3cinput type\x3d"submit" id\x3d"submitButton" style\x3d"display:none"\x3e'}]},buttons:[{text:Strings.loginRegister,handler:"onRegisterClick",reference:"registerButton"},{text:Strings.loginLogin,handler:"onLoginClick"}]});
Ext.define("Traccar.view.MainController",{extend:Ext.app.ViewController,alias:"controller.mainController",init:function(){this.lookupReference("reportView").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableReport"));this.lookupReference("eventsView").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableEvents"))}});
Ext.define("Traccar.view.GridPanel",{extend:Ext.grid.Panel,xtype:"customGridPanel",plugins:"gridfilters",viewConfig:{enableTextSelection:!0,getRowClass:function(){return this.enableTextSelection?"x-selectable":""}}});
Ext.define("Traccar.view.edit.ToolbarController",{extend:Ext.app.ViewController,alias:"controller.toolbarController",onAddClick:function(){var a,b=Ext.create(this.objectModel);b.store=this.getView().getStore();b.store instanceof Ext.data.ChainedStore&&(b.store=b.store.getSource());a=Ext.create(this.objectDialog);a.down("form").loadRecord(b);a.show()},onEditClick:function(){var a,b=this.getView().getSelectionModel().getSelection()[0];a=Ext.create(this.objectDialog);a.down("form").loadRecord(b);a.show()},
onRemoveClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.Msg.show({title:this.removeTitle,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,no:Strings.sharedCancel},fn:function(b){var c=a.store;"yes"===b&&(c.remove(a),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}}))}})},onSelectionChange:function(a,b){a=0===b.length;this.lookupReference("toolbarEditButton").setDisabled(a);
this.lookupReference("toolbarRemoveButton").setDisabled(a)}});Ext.define("Traccar.view.BaseWindow",{extend:Ext.window.Window,width:Traccar.Style.windowWidth,height:Traccar.Style.windowHeight,layout:"fit",initComponent:function(){if(window.innerWidth<Traccar.Style.windowWidth||window.innerHeight<Traccar.Style.windowHeight)this.maximized=!0,this.style="border-width: 0";this.callParent()}});
Ext.define("Traccar.view.dialog.AttributeController",{extend:Ext.app.ViewController,alias:"controller.attribute",onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();(c=b.store)?(b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}})):b.save();a.up("window").close()},onValidityChange:function(a,b){this.lookupReference("saveButton").setDisabled(!b)},defaultFieldConfig:{name:"value",reference:"valueField",
allowBlank:!1,fieldLabel:Strings.stateValue},onNameChange:function(a,b){var c=this.lookupReference("valueField");if(b=a.getStore().getById(b)){a=Ext.clone(this.defaultFieldConfig);switch(b.get("valueType")){case "number":a.xtype="customNumberField";void 0!==b.get("allowDecimals")?a.allowDecimals=b.get("allowDecimals"):a.allowDecimals=!0;a.dataType=b.get("dataType");a.maxValue=b.get("maxValue");a.minValue=b.get("minValue");break;case "boolean":a.xtype="checkboxfield";a.inputValue=!0;a.uncheckedValue=
!1;break;case "color":a.xtype="customcolorpicker";break;default:if(b.get("dataType"))switch(a.xtype="combobox",a.queryMode="local",a.editable=!1,b.get("dataType")){case "distanceUnit":a.store="DistanceUnits";a.displayField="name";a.valueField="key";break;case "speedUnit":a.store="SpeedUnits";a.displayField="name";a.valueField="key";break;case "volumeUnit":a.store="VolumeUnits";a.displayField="fullName";a.valueField="key";break;case "timezone":a.store="AllTimezones",a.displayField="key"}else a.xtype=
"textfield"}c.getXType()!==a.xtype||"customNumberField"===a.xtype&&c.dataType!==a.dataType?(this.getView().down("form").insert(this.getView().down("form").items.indexOf(c),a),this.getView().down("form").remove(c)):"customNumberField"===a.xtype?(c.setConfig(a),c.validate()):"combobox"===a.xtype&&(c.setConfig(a),c.setValue())}}});
Ext.define("Traccar.view.ColorPicker",{extend:Ext.form.field.Picker,xtype:"customcolorpicker",config:{value:"#008000"},editable:!1,createPicker:function(){return Ext.create("Ext.picker.Color",{floating:!0,picker:this,select:function(a){this.picker.setValue("#"+a);this.picker.collapse()}})},setValue:function(a){this.callParent([a]);this.setFieldStyle("background-color:"+a)}});
Ext.define("Traccar.view.CustomNumberField",{extend:Ext.form.field.Number,xtype:"customNumberField",beforeEl:'\x3cdiv style\x3d"width:100%;display:inline-table;"\x3e',unitEl:'\x3cdiv id\x3d"numberUnitEl" style\x3d"display:table-cell;padding-left:10px;vertical-align:middle;width:1px;white-space:nowrap;"\x3e',constructor:function(a){var b="";if(a.dataType){a.beforeBodyEl=this.beforeEl;switch(a.dataType){case "speed":a.units={};a.units.getStore=function(){return Ext.getStore("SpeedUnits")};a.units.getValue=
function(){return Traccar.app.getAttributePreference("speedUnit","kn")};b=Ext.getStore("SpeedUnits").findRecord("key",a.units.getValue()).get("name");break;case "distance":a.units={};a.units.getStore=function(){return Ext.getStore("DistanceUnits")};a.units.getValue=function(){return Traccar.app.getAttributePreference("distanceUnit","km")};b=Ext.getStore("DistanceUnits").findRecord("key",a.units.getValue()).get("name");break;case "frequency":a.listeners||(a.listeners={}),a.listeners.afterrender=function(){this.units||
(this.units=Ext.create({xtype:"combobox",renderTo:"numberUnitEl",store:"TimeUnits",displayField:"name",valueField:"key",editable:!1,numberField:this,value:"s",width:"70px",listeners:{select:function(){this.numberField.step=this.getStore().convertValue(1,this.getValue(),!0)}}}))}}a.afterBodyEl=this.unitEl+b+"\x3c/div\x3e\x3c/div\x3e";a.rawToValue=function(a){return this.units?this.units.getStore().convertValue(this.parseValue(a),this.units.getValue(),!0):this.parseValue(a)};a.valueToRaw=function(a){return this.units?
String(this.units.getStore().convertValue(a,this.units.getValue(),!1)):String(a)};a.units&&(a.step=a.units.getStore().convertValue(1,a.units.getValue(),!0))}this.callParent(arguments)}});
Ext.define("Traccar.view.dialog.Attribute",{extend:Traccar.view.dialog.Base,controller:"attribute",title:Strings.sharedAttribute,items:{xtype:"form",listeners:{validitychange:"onValidityChange"},items:[{xtype:"textfield",reference:"nameTextField",name:"name",allowBlank:!1,fieldLabel:Strings.sharedName},{xtype:"textfield",name:"value",reference:"valueField",allowBlank:!1,fieldLabel:Strings.stateValue}]},buttons:[{glyph:"xf00c@FontAwesome",reference:"saveButton",tooltip:Strings.sharedSave,tooltipType:"title",
minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.edit.AttributesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.attributes",removeTitle:Strings.stateName,init:function(){var a,b,c=0,d;a=Ext.create("Traccar.store.Attributes");a.setProxy(Ext.create("Ext.data.proxy.Memory"));"undefined"===typeof this.getView().record.get("attributes")&&this.getView().record.set("attributes",{});d=this.getView().record.get("attributes");for(b in d)d.hasOwnProperty(b)&&a.add(Ext.create("Traccar.model.Attribute",{priority:c++,
name:b,value:d[b]}));a.addListener("add",function(a,b){var c;c=this.getView();for(a=0;a<b.length;a++)c.record.get("attributes")[b[a].get("name")]=b[a].get("value");c.record.dirty=!0},this);a.addListener("update",function(a,b,c){a=this.getView();c===Ext.data.Model.EDIT&&(b.modified.name!==b.get("name")&&delete a.record.get("attributes")[b.modified.name],a.record.get("attributes")[b.get("name")]=b.get("value"),a.record.dirty=!0)},this);a.addListener("remove",function(a,b){var c;c=this.getView();for(a=
0;a<b.length;a++)delete c.record.get("attributes")[b[a].get("name")];c.record.dirty=!0},this);this.getView().setStore(a);this.getView().record instanceof Traccar.model.Device?this.getView().attributesStore="DeviceAttributes":this.getView().record instanceof Traccar.model.Geofence?this.getView().attributesStore="GeofenceAttributes":this.getView().record instanceof Traccar.model.Group?this.getView().attributesStore="GroupAttributes":this.getView().record instanceof Traccar.model.Server?this.getView().attributesStore=
"ServerAttributes":this.getView().record instanceof Traccar.model.User&&(this.getView().attributesStore="UserAttributes")},comboConfig:{xtype:"combobox",reference:"nameComboField",name:"name",fieldLabel:Strings.sharedName,displayField:"name",valueField:"key",allowBlank:!1,queryMode:"local",listeners:{change:"onNameChange"}},initDialog:function(a){var b,c=Ext.create("Traccar.view.dialog.Attribute");this.getView().attributesStore&&(this.comboConfig.store=this.getView().attributesStore,b=c.lookupReference("nameTextField"),
c.down("form").insert(0,this.comboConfig),c.down("form").remove(b));c.down("form").loadRecord(a);c.show()},onAddClick:function(){var a=Ext.create("Traccar.model.Attribute");a.store=this.getView().getStore();this.initDialog(a)},onEditClick:function(){this.initDialog(this.getView().getSelectionModel().getSelection()[0])}});
Ext.define("Traccar.view.edit.Toolbar",{extend:Ext.toolbar.Toolbar,xtype:"editToolbar",initComponent:function(){this.callParent(arguments);this.add(0,[{xtype:"button",handler:"onAddClick",reference:"toolbarAddButton",glyph:"xf067@FontAwesome",tooltip:Strings.sharedAdd,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onEditClick",reference:"toolbarEditButton",glyph:"xf040@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onRemoveClick",reference:"toolbarRemoveButton",
glyph:"xf00d@FontAwesome",tooltip:Strings.sharedRemove,tooltipType:"title"}])}});
Ext.define("Traccar.view.edit.Attributes",{extend:Traccar.view.GridPanel,xtype:"attributesView",controller:"attributes",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string",renderer:function(a){var b;this.attributesStore&&(b=Ext.getStore(this.attributesStore).getById(a));return b&&b.get("name")||a}},{text:Strings.stateValue,dataIndex:"value",renderer:function(a,
b,c){var d;this.attributesStore&&(d=Ext.getStore(this.attributesStore).getById(c.get("name")));return Traccar.AttributeFormatter.renderAttribute(a,d)}}]}});
Ext.define("Traccar.view.dialog.BaseEditController",{extend:Ext.app.ViewController,alias:"controller.baseEdit",onSaveClick:function(a){var b;a=a.up("window").down("form");a.updateRecord();a=a.getRecord();(b=a.store)?(a.phantom&&b.add(a),b.sync({failure:function(a){b.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}})):a.save();this.closeView()},showAttributesView:function(a){a=a.up("window").down("form").getRecord();Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedAttributes,
items:{xtype:"attributesView",record:a}}).show()}});
Ext.define("Traccar.view.dialog.SavedCommandController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.savedCommand",defaultFieldConfig:{allowBlank:!1},onTypeChange:function(a,b){var c,d,e,f;f=a.up("window").down("form").getRecord();this.lookupReference("parameters").removeAll();if((b=Ext.getStore("KnownCommands").getById(b))&&b.get("parameters"))for(d=b.get("parameters"),b=0;b<d.length;b++){e=new Traccar.model.KnownAttribute(d[b]);c=Ext.clone(this.defaultFieldConfig);c.key=e.get("key");
c.fieldLabel=e.get("name");f.get("attributes")&&(c.value=f.get("attributes")[e.get("key")]);c.disabled=a.isDisabled();switch(e.get("valueType")){case "number":c.xtype="customNumberField";void 0!==e.get("allowDecimals")?c.allowDecimals=e.get("allowDecimals"):c.allowDecimals=!0;c.dataType=e.get("dataType");c.maxValue=e.get("maxValue");c.minValue=e.get("minValue");break;case "boolean":c.xtype="checkboxfield";c.inputValue=!0;c.uncheckedValue=!1;break;default:"timezone"===e.get("dataType")?(c.xtype="combobox",
c.queryMode="local",c.displayField="key",c.editable=!1,c.store="AllTimezones"):c.xtype="textfield"}this.lookupReference("parameters").add(c)}},fillAttributes:function(a){var b,c,d={};a=a.up("window").down("form");a.updateRecord();b=a.getRecord();c=this.lookupReference("parameters").items.items;for(a=0;a<c.length;a++)d[c[a].key]=c[a].getValue();b.set("attributes",d)},onSaveClick:function(a){this.fillAttributes(a);this.callParent(arguments)},onValidityChange:function(a,b){this.lookupReference("saveButton").setDisabled(!b)}});
Ext.define("Traccar.view.permissions.BaseController",{extend:Ext.app.ViewController,alias:"controller.base",init:function(){var a={},b,c;a[this.getView().baseObjectName]=this.getView().baseObject;b=this.getView().linkStoreName;c=this.getView().storeName;b="undefined"===typeof b?c:b;this.getView().setStore(Ext.getStore(c));this.getView().getStore().load({scope:this,callback:function(){Ext.create("Traccar.store."+b).load({params:a,scope:this,callback:function(a,b,c){if(c)for(b=0;b<a.length;b++)c=this.getView().getStore().getById(a[b].getId()),
this.getView().getSelectionModel().select(c,!0,!0)}})}})},onBeforeSelect:function(a,b){var c={};c[this.getView().baseObjectName]=this.getView().baseObject;c[this.getView().linkObjectName]=b.getId();Ext.Ajax.request({scope:this,url:"api/permissions",jsonData:Ext.util.JSON.encode(c),callback:function(c,e,f){e||(a.deselect(b,!0),Traccar.app.showError(f))}})},onBeforeDeselect:function(a,b){var c={};c[this.getView().baseObjectName]=this.getView().baseObject;c[this.getView().linkObjectName]=b.getId();Ext.Ajax.request({scope:this,
method:"DELETE",url:"api/permissions",jsonData:Ext.util.JSON.encode(c),callback:function(c,e,f){e||(a.select(b,!0,!0),Traccar.app.showError(f))}})}});Ext.define("Traccar.view.permissions.Base",{extend:Traccar.view.GridPanel,controller:"base",selModel:{selType:"checkboxmodel",checkOnly:!0,showHeaderCheckbox:!1},listeners:{beforedeselect:"onBeforeDeselect",beforeselect:"onBeforeSelect"}});
Ext.define("Traccar.view.permissions.SavedCommands",{extend:Traccar.view.permissions.Base,xtype:"linkSavedCommandsView",columns:{items:[{text:Strings.sharedDescription,dataIndex:"description",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.sharedType,dataIndex:"type",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:{type:"list",idField:"type",labelField:"name",store:"AllCommandTypes"},renderer:Traccar.AttributeFormatter.getFormatter("commandType")},{text:Strings.notificationSms,
dataIndex:"textChannel",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"boolean"}]}});
Ext.define("Traccar.view.dialog.SendCommandController",{extend:Traccar.view.dialog.SavedCommandController,alias:"controller.sendCommand",onSendClick:function(a){this.fillAttributes(a);a=a.up("window").down("form").getRecord();Ext.Ajax.request({scope:this,url:"api/commands/send",jsonData:a.getData(),callback:this.onSendResult})},onValidityChange:function(a,b){this.lookupReference("sendButton").setDisabled(!b||null===this.lookupReference("commandsComboBox").getValue())},onTextChannelChange:function(a,
b){a=this.lookupReference("commandType").getStore();a.getProxy().setExtraParam("textChannel",b);a.reload()},onCommandSelect:function(a){var b,c=a.getStore().getById(a.getValue());c.set("deviceId",this.getView().deviceId);b=a.up("window").down("form");a=b.getRecord();b.loadRecord(c);if(a&&c.get("type")===a.get("type"))this.onTypeChange(this.lookupReference("commandType"),c.get("type"));this.lookupReference("newCommandFields").setDisabled(0!==c.getId());this.lookupReference("sendButton").setDisabled(0===
c.getId())},onSendResult:function(a,b,c){b?(this.closeView(),Traccar.app.showToast(202===c.status?Strings.commandQueued:Strings.commandSent)):Traccar.app.showError(c)},closeView:function(){this.lookupReference("commandsComboBox").getStore().removeAll();this.callParent(arguments)}});
Ext.define("Traccar.view.dialog.SendCommand",{extend:Traccar.view.dialog.Base,controller:"sendCommand",title:Strings.commandTitle,items:[{xtype:"combobox",reference:"commandsComboBox",fieldLabel:Strings.deviceCommand,displayField:"description",valueField:"id",store:"DeviceCommands",queryMode:"local",editable:!1,allowBlank:!1,listeners:{select:"onCommandSelect"}},{xtype:"form",listeners:{validitychange:"onValidityChange"},items:[{xtype:"fieldset",reference:"newCommandFields",disabled:!0,items:[{xtype:"checkboxfield",
name:"textChannel",reference:"textChannelCheckBox",inputValue:!0,uncheckedValue:!1,fieldLabel:Strings.notificationSms,listeners:{change:"onTextChannelChange"}},{xtype:"combobox",name:"type",reference:"commandType",fieldLabel:Strings.sharedType,store:"CommandTypes",displayField:"name",valueField:"type",editable:!1,allowBlank:!1,listeners:{change:"onTypeChange"}},{xtype:"fieldcontainer",reference:"parameters"}]}]}],buttons:[{xtype:"tbfill"},{glyph:"xf093@FontAwesome",tooltip:Strings.sharedSend,tooltipType:"title",
minWidth:0,disabled:!0,reference:"sendButton",handler:"onSendClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.BaseEdit",{extend:Traccar.view.dialog.Base,controller:"baseEdit",buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",reference:"saveButton",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.ClearableComboBox",{extend:Ext.form.field.ComboBox,xtype:"clearableComboBox",editable:!1,triggers:{clear:{cls:"iconCls: x-fa fa-times",handler:function(a){a.clearValue()}}}});Ext.define("Traccar.view.dialog.DeviceController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.device",init:function(){Traccar.app.getUser().get("administrator")&&this.lookupReference("disabledField").setHidden(!1)}});
Ext.define("Traccar.view.dialog.Device",{extend:Traccar.view.dialog.BaseEdit,controller:"device",title:Strings.sharedDevice,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"textfield",name:"uniqueId",fieldLabel:Strings.deviceIdentifier,allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"clearableComboBox",name:"groupId",fieldLabel:Strings.groupParent,
store:"Groups",queryMode:"local",displayField:"name",valueField:"id"},{xtype:"textfield",name:"phone",fieldLabel:Strings.sharedPhone},{xtype:"textfield",name:"model",fieldLabel:Strings.deviceModel},{xtype:"textfield",name:"contact",fieldLabel:Strings.deviceContact},{xtype:"combobox",name:"category",fieldLabel:Strings.deviceCategory,store:"DeviceImages",queryMode:"local",displayField:"name",valueField:"key",editable:!1,listConfig:{getInnerTpl:function(){return'\x3ctable\x3e\x3ctr valign\x3d"middle" \x3e\x3ctd\x3e\x3cdiv align\x3d"center" style\x3d"width:40px;height:40px;" \x3e{[new XMLSerializer().serializeToString(Traccar.DeviceImages.getImageSvg(Traccar.Style.mapColorOnline, false, 0, values.key))]}\x3c/div\x3e\x3c/td\x3e\x3ctd\x3e{name}\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'}}},
{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"disabled",fieldLabel:Strings.sharedDisabled,hidden:!0,reference:"disabledField"}]}]}});
Ext.define("Traccar.view.permissions.Geofences",{extend:Traccar.view.permissions.Base,xtype:"linkGeofencesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.sharedCalendar,dataIndex:"calendarId",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:{type:"list",labelField:"name",store:"AllCalendars"},renderer:Traccar.AttributeFormatter.getFormatter("calendarId")}]}});
Ext.define("Traccar.view.permissions.ComputedAttributes",{extend:Traccar.view.permissions.Base,xtype:"linkComputedAttributesView",columns:{items:[{text:Strings.sharedDescription,dataIndex:"description",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.sharedAttribute,dataIndex:"attribute",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:{type:"list",labelField:"name",store:"PositionAttributes"},renderer:function(a){return Ext.getStore("PositionAttributes").getAttributeName(a)}}]}});
Ext.define("Traccar.view.permissions.Drivers",{extend:Traccar.view.permissions.Base,xtype:"linkDriversView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"}]}});
Ext.define("Traccar.view.edit.DevicesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.devices",config:{listen:{controller:{"*":{selectreport:"selectReport"},root:{selectdevice:"selectDevice"},map:{selectdevice:"selectDevice",deselectfeature:"deselectFeature"}},store:{"#Devices":{update:"onUpdateDevice"}}}},objectModel:"Traccar.model.Device",objectDialog:"Traccar.view.dialog.Device",removeTitle:Strings.sharedDevice,init:function(){var a=this,b,c;c=Traccar.app.getPreference("deviceReadonly",
!1)&&!Traccar.app.getUser().get("administrator");b=Traccar.app.getPreference("readonly",!1)&&!Traccar.app.getUser().get("administrator");this.lookupReference("toolbarAddButton").setDisabled(b||c);this.lookupReference("toolbarDeviceMenu").setHidden(b||c);setInterval(function(){a.getView().getView().refresh()},Traccar.Style.refreshPeriod)},onCommandClick:function(){var a,b,c;a=this.getView().getSelectionModel().getSelection()[0].get("id");b=Ext.create("Traccar.view.dialog.SendCommand");b.deviceId=a;
c=b.lookupReference("commandsComboBox").getStore();c.getProxy().setExtraParam("deviceId",a);Traccar.app.getPreference("limitCommands",!1)||c.add({id:0,description:Strings.sharedNew});c.load({addRecords:!0});c=b.lookupReference("commandType").getStore();c.getProxy().setExtraParam("deviceId",a);c.load();b.show()},updateButtons:function(a){var b,c,d;c=Traccar.app.getPreference("deviceReadonly",!1)&&!Traccar.app.getUser().get("administrator");b=Traccar.app.getPreference("readonly",!1)&&!Traccar.app.getUser().get("administrator");
d=0===a.length;this.lookupReference("toolbarEditButton").setDisabled(d||b||c);this.lookupReference("toolbarRemoveButton").setDisabled(d||b||c);c=this.lookupReference("toolbarDeviceMenu");c.device=d?null:a[0];c.setDisabled(d);this.lookupReference("deviceCommandButton").setDisabled(d||b)},onSelectionChange:function(a,b){this.updateButtons(b);0<b.length?this.fireEvent("selectdevice",b[0],!0):this.fireEvent("deselectfeature")},selectDevice:function(a){this.getView().getSelectionModel().select([a],!1,
!0);this.updateButtons(this.getView().getSelectionModel().getSelected().items);this.getView().getView().focusRow(a)},selectReport:function(a){void 0!==a&&this.deselectFeature()},onUpdateDevice:function(){this.updateButtons(this.getView().getSelectionModel().getSelected().items)},deselectFeature:function(){this.getView().getSelectionModel().deselectAll()}});
Ext.define("Traccar.view.ArrayListFilter",{extend:Ext.grid.filters.filter.List,alias:"grid.filter.arraylist",type:"arraylist",constructor:function(a){this.callParent([a]);this.filter.setFilterFn(function(a){var c,d;c=a.get(this.getProperty());d=this.getValue();if(Ext.isArray(c))for(a=0;a<c.length;a++){if(-1!==d.indexOf(c[a]))return!0}else if(-1!==d.indexOf(c))return!0;return!1})}});
Ext.define("Traccar.view.permissions.Notifications",{extend:Traccar.view.permissions.Base,xtype:"linkNotificationsView",columns:{items:[{text:Strings.notificationType,dataIndex:"type",flex:2,renderer:function(a){return Traccar.app.getEventString(a)},filter:{type:"list",idField:"type",labelField:"name",store:"AllNotificationTypes"}},{text:Strings.notificationAlways,dataIndex:"always",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:Traccar.AttributeFormatter.getFormatter("always"),filter:"boolean"},
{text:Strings.notificationWeb,dataIndex:"web",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:Traccar.AttributeFormatter.getFormatter("web"),filter:"boolean"},{text:Strings.notificationMail,dataIndex:"mail",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:Traccar.AttributeFormatter.getFormatter("mail"),filter:"boolean"},{text:Strings.notificationSms,dataIndex:"sms",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:Traccar.AttributeFormatter.getFormatter("sms"),filter:"boolean"},
{text:Strings.sharedCalendar,dataIndex:"calendarId",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:{type:"list",labelField:"name",store:"AllCalendars"},renderer:Traccar.AttributeFormatter.getFormatter("calendarId")}]}});
Ext.define("Traccar.view.dialog.SelectDeviceController",{extend:Ext.app.ViewController,alias:"controller.selectDevice",onSaveClick:function(a){var b,c;b=this.lookupReference("deviceField").getValue();c=this.getView().record.data;Ext.Ajax.request({url:"api/attributes/computed/test?deviceId\x3d"+b,method:"POST",jsonData:Ext.util.JSON.encode(c),callback:function(a,b,c){b?Ext.Msg.alert(Strings.sharedInfoTitle,c.responseText||c.statusText):Traccar.app.showError(c)}});a.up("window").close()},onDeviceChange:function(a,
b){this.lookupReference("saveButton").setDisabled(null===b)}});
Ext.define("Traccar.view.dialog.SelectDevice",{extend:Traccar.view.dialog.Base,controller:"selectDevice",title:Strings.sharedDevice,items:{xtype:"form",items:[{xtype:"combobox",reference:"deviceField",store:"Devices",queryMode:"local",displayField:"name",valueField:"id",editable:!1,listeners:{change:"onDeviceChange"}}]},buttons:[{glyph:"xf00c@FontAwesome",reference:"saveButton",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick",disabled:!0},{glyph:"xf00d@FontAwesome",
tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.ComputedAttributeController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.computedAttribute",onAttributeChange:function(a,b){(a=Ext.getStore("PositionAttributes").getById(b))?(this.getView().lookupReference("typeComboField").setValue(a.get("valueType")),this.getView().lookupReference("typeComboField").setReadOnly(!0)):this.getView().lookupReference("typeComboField").setReadOnly(!1)},onCheckClick:function(a){var b;b=Ext.create("Traccar.view.dialog.SelectDevice");
a=a.up("window").down("form");a.updateRecord();b.record=a.getRecord();b.show()}});
Ext.define("Traccar.view.dialog.ComputedAttribute",{extend:Traccar.view.dialog.BaseEdit,controller:"computedAttribute",title:Strings.sharedComputedAttribute,items:{xtype:"form",items:[{xtype:"textfield",name:"description",fieldLabel:Strings.sharedDescription},{xtype:"combobox",name:"attribute",fieldLabel:Strings.sharedAttribute,store:"PositionAttributes",displayField:"name",valueField:"key",listeners:{change:"onAttributeChange"}},{xtype:"textareafield",name:"expression",fieldLabel:Strings.sharedExpression,
allowBlank:!1},{xtype:"combobox",name:"type",reference:"typeComboField",store:"AttributeValueTypes",fieldLabel:Strings.sharedType,displayField:"name",valueField:"id",editable:!1}]},buttons:[{glyph:"xf128@FontAwesome",tooltip:Strings.sharedCheckComputedAttribute,tooltipType:"title",minWidth:0,handler:"onCheckClick"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",
minWidth:0,handler:"closeView"}]});Ext.define("Traccar.view.edit.ComputedAttributesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.computedAttributes",objectModel:"Traccar.model.ComputedAttribute",objectDialog:"Traccar.view.dialog.ComputedAttribute",removeTitle:Strings.sharedComputedAttribute});
Ext.define("Traccar.view.edit.ComputedAttributes",{extend:Traccar.view.GridPanel,xtype:"computedAttributesView",controller:"computedAttributes",store:"ComputedAttributes",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedDescription,dataIndex:"description",filter:"string"},{text:Strings.sharedAttribute,dataIndex:"attribute",filter:{type:"list",labelField:"name",store:"PositionAttributes"},
renderer:function(a){return Ext.getStore("PositionAttributes").getAttributeName(a)}},{text:Strings.sharedExpression,dataIndex:"expression"},{text:Strings.sharedType,dataIndex:"type",filter:{type:"list",labelField:"name",store:"AttributeValueTypes"},renderer:function(a){var b=Ext.getStore("AttributeValueTypes").getById(a);return b?b.get("name"):a}}]}});
Ext.define("Traccar.view.permissions.Maintenances",{extend:Traccar.view.permissions.Base,xtype:"linkMaintenancesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.sharedType,dataIndex:"type",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:{type:"list",idField:"key",labelField:"name",store:"MaintenanceTypes"},renderer:function(a){var b=Ext.getStore("MaintenanceTypes").getById(a);return b&&b.get("name")||
a}},{text:Strings.maintenanceStart,dataIndex:"start",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:function(a,b,c){return Traccar.AttributeFormatter.renderAttribute(a,Ext.getStore("MaintenanceTypes").getById(c.get("type")))}},{text:Strings.maintenancePeriod,dataIndex:"period",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:function(a,b,c){return Traccar.AttributeFormatter.renderAttribute(a,Ext.getStore("MaintenanceTypes").getById(c.get("type")))}}]}});
Ext.define("Traccar.view.DeviceMenuController",{extend:Ext.app.ViewController,alias:"controller.deviceMenu",init:function(){this.lookupReference("menuDriversButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableDrivers"));this.lookupReference("menuComputedAttributesButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableComputedAttributes"));this.lookupReference("menuCommandsButton").setHidden(Traccar.app.getPreference("limitCommands",
!1));this.lookupReference("menuDeviceDistanceButton").setHidden(!Traccar.app.getUser().get("administrator")&&0===Traccar.app.getUser().get("userLimit")||Traccar.app.getVehicleFeaturesDisabled());this.lookupReference("menuMaintenancesButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableMaintenances"))},onGeofencesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"linkGeofencesView",baseObjectName:"deviceId",
linkObjectName:"geofenceId",storeName:"Geofences",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},onNotificationsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedNotifications,items:{xtype:"linkNotificationsView",baseObjectName:"deviceId",linkObjectName:"notificationId",storeName:"Notifications",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},onComputedAttributesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedComputedAttributes,
items:{xtype:"linkComputedAttributesView",baseObjectName:"deviceId",linkObjectName:"attributeId",storeName:"ComputedAttributes",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},onDriversClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedDrivers,items:{xtype:"linkDriversView",baseObjectName:"deviceId",linkObjectName:"driverId",storeName:"Drivers",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},onCommandsClick:function(){Ext.create("Traccar.view.BaseWindow",
{title:Strings.sharedSavedCommands,items:{xtype:"linkSavedCommandsView",baseObjectName:"deviceId",linkObjectName:"commandId",storeName:"Commands",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},onMaintenancesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedMaintenances,items:{xtype:"linkMaintenancesView",baseObjectName:"deviceId",linkObjectName:"maintenanceId",storeName:"Maintenances",baseObject:this.getView().up("deviceMenu").device.getId()}}).show()},
onDeviceDistanceClick:function(){var a,b=Ext.create("Traccar.view.dialog.DeviceDistance");b.deviceId=this.getView().up("deviceMenu").device.getId();(a=Ext.getStore("LatestPositions").findRecord("deviceId",b.deviceId,0,!1,!1,!0))&&b.lookupReference("totalDistance").setValue(a.get("attributes").totalDistance);b.show()}});
Ext.define("Traccar.view.DeviceMenu",{extend:Ext.button.Button,xtype:"deviceMenu",glyph:"xf013@FontAwesome",tooltip:Strings.settingsTitle,tooltipType:"title",menu:{controller:"deviceMenu",items:[{text:Strings.sharedDrivers,glyph:"xf2c2@FontAwesome",handler:"onDriversClick",reference:"menuDriversButton"},{text:Strings.sharedGeofences,glyph:"xf21d@FontAwesome",handler:"onGeofencesClick",reference:"menuGeofencesButton"},{text:Strings.sharedNotifications,glyph:"xf003@FontAwesome",handler:"onNotificationsClick",
reference:"menuNotificationsButton"},{text:Strings.sharedComputedAttributes,glyph:"xf0ae@FontAwesome",handler:"onComputedAttributesClick",reference:"menuComputedAttributesButton"},{text:Strings.sharedSavedCommands,glyph:"xf093@FontAwesome",handler:"onCommandsClick",reference:"menuCommandsButton"},{text:Strings.sharedMaintenances,glyph:"xf0ad@FontAwesome",handler:"onMaintenancesClick",reference:"menuMaintenancesButton"},{hidden:!0,text:Strings.sharedDeviceDistance,glyph:"xf0e4@FontAwesome",handler:"onDeviceDistanceClick",
reference:"menuDeviceDistanceButton"}]}});
Ext.define("Traccar.view.edit.Devices",{extend:Traccar.view.GridPanel,xtype:"devicesView",controller:"devices",store:"VisibleDevices",stateful:!0,stateId:"devices-grid",tbar:{componentCls:"toolbar-header-style",defaults:{xtype:"button",disabled:!0,tooltipType:"title"},items:[{xtype:"tbtext",html:Strings.deviceTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill",disabled:!1},{handler:"onAddClick",reference:"toolbarAddButton",glyph:"xf067@FontAwesome",tooltip:Strings.sharedAdd},{handler:"onEditClick",
reference:"toolbarEditButton",glyph:"xf040@FontAwesome",tooltip:Strings.sharedEdit},{handler:"onRemoveClick",reference:"toolbarRemoveButton",glyph:"xf00d@FontAwesome",tooltip:Strings.sharedRemove},{handler:"onCommandClick",reference:"deviceCommandButton",glyph:"xf093@FontAwesome",tooltip:Strings.deviceCommand},{xtype:"deviceMenu",reference:"toolbarDeviceMenu",enableToggle:!1}]},listeners:{selectionchange:"onSelectionChange"},viewConfig:{enableTextSelection:!0,getRowClass:function(a){var b="",c=a.get("status");
a.get("disabled")&&(b="view-item-disabled ");c&&(b+=Ext.getStore("DeviceStatuses").getById(c).get("color"));return b}},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",hidden:!0},{text:Strings.sharedPhone,dataIndex:"phone",hidden:!0},{text:Strings.deviceModel,dataIndex:"model",hidden:!0},{text:Strings.deviceContact,dataIndex:"contact",hidden:!0},{text:Strings.groupDialog,
dataIndex:"groupId",hidden:!0,filter:{type:"list",labelField:"name",store:"Groups"},renderer:Traccar.AttributeFormatter.getFormatter("groupId")},{text:Strings.sharedDisabled,dataIndex:"disabled",renderer:Traccar.AttributeFormatter.getFormatter("disabled"),hidden:!0,filter:"boolean"},{text:Strings.sharedGeofences,dataIndex:"geofenceIds",hidden:!0,filter:{type:"arraylist",idField:"id",labelField:"name",store:"Geofences"},renderer:function(a){var b,c,d="";if(Ext.isArray(a))for(b=0;b<a.length;b++)(c=
Traccar.AttributeFormatter.geofenceIdFormatter(a[b]))&&(d+=c+(b<a.length-1?", ":""));return d}},{text:Strings.deviceStatus,dataIndex:"status",filter:{type:"list",labelField:"name",store:"DeviceStatuses"},renderer:function(a){return a&&(a=Ext.getStore("DeviceStatuses").getById(a))?a.get("name"):null}},{text:Strings.deviceLastUpdate,dataIndex:"lastUpdate",renderer:Traccar.AttributeFormatter.getFormatter("lastUpdate")}]}});
Ext.define("Traccar.view.StateController",{extend:Ext.app.ViewController,alias:"controller.state",config:{listen:{controller:{"*":{selectdevice:"selectDevice",selectreport:"selectReport",deselectfeature:"deselectFeature"}},global:{stategeocode:"onGeocode"},store:{"#LatestPositions":{add:"updateLatest",update:"updateLatest"},"#ReportRoute":{clear:"clearReport"}}}},init:function(){var a,b;(Traccar.app.getUser().get("administrator")||!Traccar.app.getUser().get("deviceReadonly")&&!Traccar.app.getPreference("readonly",
!1))&&this.lookupReference("computedAttributesButton").setDisabled(Traccar.app.getBooleanAttributePreference("ui.disableComputedAttributes"));a=Traccar.app.getAttributePreference("ui.hidePositionAttributes");this.hideAttributes={};if(a)for(b=a.split(/[ ,]+/).filter(Boolean),a=0;a<b.length;a++)this.hideAttributes[b[a]]=!0},onComputedAttributesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedComputedAttributes,items:{xtype:"computedAttributesView"}}).show()},keys:function(){var a,
b,c;c={};b="fixTime latitude longitude valid accuracy altitude speed course address protocol".split(" ");for(a=0;a<b.length;a++)c[b[a]]={priority:a,name:Strings["position"+b[a].replace(/^\w/g,function(a){return a.toUpperCase()})]};return c}(),updateLatest:function(a,b){Ext.isArray(b)||(b=[b]);for(a=0;a<b.length;a++)this.deviceId===b[a].get("deviceId")&&(this.position=b[a],this.updatePosition())},formatValue:function(a){return"number"===typeof id?Number(a.toFixed(2)):a},findAttribute:function(a){return a.get("deviceId")===
this.position.get("deviceId")&&a.get("attribute")===this.lookupAttribute},updatePosition:function(){var a,b,c,d,e;b=Ext.getStore("Attributes");b.removeAll();for(c in this.position.data)this.position.data.hasOwnProperty(c)&&void 0!==this.keys[c]&&b.add(Ext.create("Traccar.model.Attribute",{priority:this.keys[c].priority,name:this.keys[c].name,value:Traccar.AttributeFormatter.getFormatter(c)(this.position.get(c))}));a=this.position.get("attributes");if(a instanceof Object)for(c in a)a.hasOwnProperty(c)&&
!this.hideAttributes[c]&&(this.lookupAttribute=c,d=Ext.getStore("PositionAttributes").getAttributeName(c,!0),e=void 0!==this.position.get("attribute."+c)?Traccar.AttributeFormatter.getAttributeFormatter(c)(this.position.get("attribute."+c)):Traccar.AttributeFormatter.defaultFormatter(a[c]),b.add(Ext.create("Traccar.model.Attribute",{priority:1024,name:d,attribute:c,value:e})))},selectDevice:function(a){this.deviceId=a.get("id");(a=Ext.getStore("LatestPositions").findRecord("deviceId",this.deviceId,
0,!1,!1,!0))?(this.position=a,this.updatePosition()):(this.position=null,Ext.getStore("Attributes").removeAll())},selectReport:function(a){a instanceof Traccar.model.Position&&(this.deviceId=null,this.position=a,this.updatePosition())},deselectFeature:function(){this.position=this.deviceId=null;Ext.getStore("Attributes").removeAll()},clearReport:function(){this.deviceId||(this.position=null,Ext.getStore("Attributes").removeAll())},onGeocode:function(){var a=this.position.getId();this.position.get("address")||
Ext.Ajax.request({scope:this,method:"GET",url:"api/server/geocode",params:{latitude:this.position.get("latitude"),longitude:this.position.get("longitude")},success:function(b){this.position&&this.position.getId()===a&&(this.position.set("address",b.responseText),this.updatePosition())},failure:function(a){Traccar.app.showError(a)}})}});
Ext.define("Traccar.view.State",{extend:Traccar.view.GridPanel,xtype:"stateView",controller:"state",store:"Attributes",stateful:!0,stateId:"state-grid",tbar:{componentCls:"toolbar-header-style",items:[{xtype:"tbtext",html:Strings.stateTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{xtype:"button",disabled:!0,handler:"onComputedAttributesClick",reference:"computedAttributesButton",glyph:"xf0ae@FontAwesome",tooltip:Strings.sharedComputedAttributes,tooltipType:"title"}]},columns:{defaults:{minWidth:Traccar.Style.columnWidthNormal,
flex:1},items:[{text:Strings.stateName,dataIndex:"name"},{text:Strings.stateValue,dataIndex:"value",cellWrap:!0,renderer:function(a,b,c){if("alarm"===c.get("attribute"))b.tdCls="view-color-red";else{if(c.get("name")===Strings.positionAddress&&!a)return'\x3ca href\x3d"#" onclick\x3d"Ext.fireEvent(\'stategeocode\')" \x3e'+Strings.sharedShowAddress+"\x3c/a\x3e";if(c.get("name")===Strings.positionImage||c.get("name")===Strings.positionAudio)if(b=this.getController().position)if(b=Ext.getStore("Devices").getById(b.get("deviceId")))return'\x3ca target\x3d"_blank" href\x3d"/api/media/'+
b.get("uniqueId")+"/"+a+'" \x3e'+a+"\x3c/a\x3e"}return a}}]}});
Ext.define("Traccar.view.dialog.ReportConfigController",{extend:Ext.app.ViewController,alias:"controller.reportConfig",onSaveClick:function(a){var b,c;c=this.getView().callingPanel;c.deviceId=this.lookupReference("deviceField").getValue();c.groupId=this.lookupReference("groupField").getValue();b=this.lookupReference("eventTypeField").getValue();-1<b.indexOf(Traccar.store.ReportEventTypes.allEvents)?b=[Traccar.store.ReportEventTypes.allEvents]:b.length===this.lookupReference("eventTypeField").getStore().getCount()-
1&&(b=[Traccar.store.ReportEventTypes.allEvents]);c.eventType=b;c.chartType=this.lookupReference("chartTypeField").getValue();c.showMarkers=this.lookupReference("showMarkersField").getValue();c.fromDate=this.lookupReference("fromDateField").getValue();c.fromTime=this.lookupReference("fromTimeField").getValue();c.toDate=this.lookupReference("toDateField").getValue();c.toTime=this.lookupReference("toTimeField").getValue();c.period=this.lookupReference("periodField").getValue();c.updateButtons();a.up("window").close()},
onPeriodChange:function(a,b){var c;a="custom"===b;this.lookupReference("fromContainer").setHidden(!a);this.lookupReference("toContainer").setHidden(!a);if(!a){a=new Date;c=new Date;switch(b){case "today":c.setDate(c.getDate()+1);break;case "yesterday":a.setDate(c.getDate()-1);break;case "thisWeek":b=a.getDay();b=a.getDate()-b+(0===b?-6:1);a.setDate(b);c.setDate(b+7);break;case "previousWeek":b=a.getDay();b=a.getDate()-b+(0===b?-6:1);a.setDate(b-7);c.setDate(b);break;case "thisMonth":a.setDate(1);
c.setDate(1);c.setMonth(a.getMonth()+1);break;case "previousMonth":a.setDate(1),a.setMonth(a.getMonth()-1),c.setDate(1)}a.setHours(0,0,0,0);c.setHours(0,0,0,0);this.lookupReference("fromDateField").setValue(a);this.lookupReference("fromTimeField").setValue(a);this.lookupReference("toDateField").setValue(c);this.lookupReference("toTimeField").setValue(c)}}});
Ext.define("Traccar.view.CustomTimeField",{extend:Ext.form.field.Time,xtype:"customTimeField",constructor:function(a){Traccar.app.getPreference("twelveHourFormat",!1)?a.format=Traccar.Style.timeFormat12:a.format=Traccar.Style.timeFormat24;this.callParent(arguments)}});
Ext.define("Traccar.view.dialog.ReportConfig",{extend:Traccar.view.dialog.Base,controller:"reportConfig",title:Strings.reportConfigure,items:[{fieldLabel:Strings.reportDevice,xtype:"tagfield",reference:"deviceField",maxWidth:Traccar.Style.formFieldWidth,store:"Devices",valueField:"id",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportGroup,xtype:"tagfield",reference:"groupField",maxWidth:Traccar.Style.formFieldWidth,store:"Groups",valueField:"id",displayField:"name",queryMode:"local"},
{fieldLabel:Strings.reportEventTypes,xtype:"tagfield",reference:"eventTypeField",maxWidth:Traccar.Style.formFieldWidth,store:"ReportEventTypes",hidden:!0,valueField:"type",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportChartType,xtype:"combobox",reference:"chartTypeField",store:"ReportChartTypes",hidden:!0,value:"speed",valueField:"key",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportShowMarkers,xtype:"checkbox",reference:"showMarkersField",inputValue:!0,uncheckedValue:!1,
value:!1},{fieldLabel:Strings.reportPeriod,reference:"periodField",xtype:"combobox",store:"ReportPeriods",editable:!1,valueField:"key",displayField:"name",queryMode:"local",listeners:{change:"onPeriodChange"}},{xtype:"fieldcontainer",layout:"vbox",reference:"fromContainer",hidden:!0,fieldLabel:Strings.reportFrom,items:[{xtype:"datefield",reference:"fromDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-18E5)},{xtype:"customTimeField",
reference:"fromTimeField",value:new Date((new Date).getTime()-18E5)}]},{xtype:"fieldcontainer",layout:"vbox",reference:"toContainer",hidden:!0,fieldLabel:Strings.reportTo,items:[{xtype:"datefield",reference:"toDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date},{xtype:"customTimeField",reference:"toTimeField",value:new Date}]}],buttons:[{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",
tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.ReportController",{extend:Ext.app.ViewController,alias:"controller.report",config:{listen:{controller:{"*":{selectdevice:"selectDevice",showsingleevent:"showSingleEvent",deselectfeature:"deselectFeature"},map:{selectreport:"selectReport"}},global:{routegeocode:"onGeocode"},store:{"#ReportEvents":{add:"loadRelatedPositions",load:"loadRelatedPositions"},"#ReportRoute":{load:"loadRoute"},"#ReportStops":{load:"loadRelatedPositions"}}}},hideReports:function(){Traccar.app.showReports(!1)},
getGrid:function(){return this.getView().getComponent("grid")},getChart:function(){return this.getView().getComponent("chart")},init:function(){var a,b,c;b=Ext.getStore("PositionAttributes").getData().items;for(a=0;a<b.length;a++)c=b[a],this.routeColumns.push({text:c.get("name"),dataIndex:"attribute."+c.get("key"),renderer:Traccar.AttributeFormatter.getAttributeFormatter(c.get("key")),hidden:!0});if(Traccar.app.getVehicleFeaturesDisabled()){for(a=0;a<this.summaryColumns.length;a++)this.summaryColumns[a].dataIndex.match("engineHours|spentFuel")&&
(this.summaryColumns[a].hidden=!0);for(a=0;a<this.tripsColumns.length;a++)this.tripsColumns[a].dataIndex.match("spentFuel|driverUniqueId")&&(this.tripsColumns[a].hidden=!0);for(a=0;a<this.stopsColumns.length;a++)this.stopsColumns[a].dataIndex.match("engineHours|spentFuel")&&(this.stopsColumns[a].hidden=!0)}},onConfigureClick:function(){var a=Ext.create("Traccar.view.dialog.ReportConfig");a.lookupReference("eventTypeField").setHidden("events"!==this.lookupReference("reportTypeField").getValue());a.lookupReference("chartTypeField").setHidden("chart"!==
this.lookupReference("reportTypeField").getValue());a.callingPanel=this;a.lookupReference("deviceField").setValue(this.deviceId);a.lookupReference("groupField").setValue(this.groupId);void 0!==this.eventType?a.lookupReference("eventTypeField").setValue(this.eventType):a.lookupReference("eventTypeField").setValue([Traccar.store.ReportEventTypes.allEvents]);void 0!==this.chartType&&a.lookupReference("chartTypeField").setValue(this.chartType);void 0!==this.showMarkers&&a.lookupReference("showMarkersField").setValue(this.showMarkers);
void 0!==this.fromDate&&a.lookupReference("fromDateField").setValue(this.fromDate);void 0!==this.fromTime&&a.lookupReference("fromTimeField").setValue(this.fromTime);void 0!==this.toDate&&a.lookupReference("toDateField").setValue(this.toDate);void 0!==this.toTime&&a.lookupReference("toTimeField").setValue(this.toTime);void 0!==this.period&&a.lookupReference("periodField").setValue(this.period);a.show()},updateButtons:function(){var a,b,c;a=this.lookupReference("reportTypeField").getValue();b=this.deviceId&&
0!==this.deviceId.length||this.groupId&&0!==this.groupId.length;c=this.fromDate&&this.fromTime&&this.toDate&&this.toTime;b=!a||!b||!c;this.lookupReference("showButton").setDisabled(b);this.lookupReference("exportButton").setDisabled("chart"===a||b)},onReportClick:function(a){var b,c,d;this.getGrid().getSelectionModel().deselectAll();(b=this.lookupReference("reportTypeField").getValue())&&(this.deviceId||this.groupId)&&(c=new Date(this.fromDate.getFullYear(),this.fromDate.getMonth(),this.fromDate.getDate(),
this.fromTime.getHours(),this.fromTime.getMinutes(),this.fromTime.getSeconds(),this.fromTime.getMilliseconds()),d=new Date(this.toDate.getFullYear(),this.toDate.getMonth(),this.toDate.getDate(),this.toTime.getHours(),this.toTime.getMinutes(),this.toTime.getSeconds(),this.toTime.getMilliseconds()),"showButton"===a.reference?("chart"===b?(a=this.getChart().getStore(),this.getChart().setSeries([])):a=this.getGrid().getStore(),a.showMarkers=this.showMarkers,a.load({params:{deviceId:this.deviceId,groupId:this.groupId,
type:this.eventType,from:c.toISOString(),to:d.toISOString()}})):"exportButton"===a.reference&&(a=this.getGrid().getStore().getProxy().url,this.downloadFile(a,{deviceId:this.deviceId,groupId:this.groupId,type:this.eventType,from:Ext.Date.format(c,"c"),to:Ext.Date.format(d,"c")})))},onClearClick:function(){var a=this.lookupReference("reportTypeField").getValue();this.clearReport(a)},clearReport:function(a){this.getGrid().getStore().removeAll();"trips"!==a&&"events"!==a&&"stops"!==a||Ext.getStore("ReportRoute").removeAll();
"chart"===a&&this.getChart().getStore().removeAll()},onSelectionChange:function(a,b){0<b.length&&(a=b[0],this.fireEvent("selectreport",a,!0),a instanceof Traccar.model.ReportTrip&&this.selectTrip(a),(a instanceof Traccar.model.Event||a instanceof Traccar.model.ReportStop)&&this.selectPositionRelated(a))},selectDevice:function(a){a&&this.getGrid().getSelectionModel().deselectAll()},selectReport:function(a){var b=this.lookupReference("reportTypeField").getValue();if(a instanceof Traccar.model.Position)if("route"===
b)this.getGrid().getSelectionModel().select([a],!1,!0),this.getGrid().getView().focusRow(a);else if("events"===b||"stops"===b)a=this.getGrid().getStore().findRecord("positionId",a.get("id"),0,!1,!0,!0),this.getGrid().getSelectionModel().select([a],!1,!0),this.getGrid().getView().focusRow(a)},deselectFeature:function(){"trips"!==this.lookupReference("reportTypeField").getValue()&&this.getGrid().getSelectionModel().deselectAll()},selectTrip:function(a){var b,c;b=new Date(a.get("startTime"));c=new Date(a.get("endTime"));
Ext.getStore("ReportRoute").removeAll();Ext.getStore("ReportRoute").showMarkers=this.showMarkers;Ext.getStore("ReportRoute").load({params:{deviceId:a.get("deviceId"),from:b.toISOString(),to:c.toISOString()}})},selectPositionRelated:function(a){a.get("positionId")&&(a=Ext.getStore("ReportRoute").getById(a.get("positionId")))&&this.fireEvent("selectreport",a,!0)},loadRelatedPositions:function(a,b){var c,d=[];Ext.getStore("ReportRoute").removeAll();for(a=0;a<b.length;a++)c=b[a],c.get("positionId")&&
d.push(c.get("positionId"));0<d.length&&Ext.getStore("Positions").load({params:{id:d},scope:this,callback:function(a,b,c){c&&(Ext.getStore("ReportRoute").showMarkers=this.showMarkers,Ext.getStore("ReportRoute").add(a),1===a.length&&this.fireEvent("selectreport",a[0],!1))}})},loadRoute:function(a){var b,c,d;if("chart"===this.lookupReference("reportTypeField").getValue()){this.getChart().getAxes()[0].setTitle(Ext.getStore("ReportChartTypes").findRecord("key",this.chartType).get("name"));c=[];b=a.collect("deviceId");
for(a=0;a<b.length;a++)d=Ext.create("Ext.data.ChainedStore",{source:"ReportRoute",filters:[{property:"deviceId",value:b[a]}]}),c.push({type:"line",store:d,yField:this.chartType,xField:"fixTime",highlightCfg:{scaling:Traccar.Style.chartMarkerHighlightScaling},colors:[Traccar.app.getReportColor(b[a])],marker:{type:"circle",radius:Traccar.Style.chartMarkerRadius,fill:Traccar.app.getReportColor(b[a])}});this.getChart().setSeries(c)}},onChartMarkerClick:function(a,b){this.fireEvent("selectreport",b.record,
!0)},showSingleEvent:function(a){this.lookupReference("reportTypeField").setValue("events");Ext.getStore("Events").load({id:a,scope:this,callback:function(a,c,d){d&&(Ext.getStore("ReportEvents").add(a),0<a.length&&(a[0].get("positionId")||(Traccar.app.isMobile()?Traccar.app.showReports(!0):this.getView().expand()),this.getGrid().getSelectionModel().select([a[0]],!1,!0),this.getGrid().getView().focusRow(a[0])))}})},downloadFile:function(a,b){Ext.Ajax.request({url:a,method:"GET",params:b,headers:{Accept:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},
binary:!0,success:function(a){var b,e,f,g;b=a.getResponseHeader("Content-Disposition");b=b.slice(b.indexOf("\x3d")+1,b.length);e=a.getResponseHeader("Content-Type");a=new Blob([a.responseBytes],{type:e});"undefined"!==typeof window.navigator.msSaveBlob?window.navigator.msSaveBlob(a,b):(f=window.URL||window.webkitURL,g=f.createObjectURL(a),b&&Ext.dom.Helper.append(Ext.getBody(),{tag:"a",href:g,download:b}).click(),setTimeout(function(){f.revokeObjectURL(g)},100))}})},onTypeChange:function(a,b,c){null!==
c&&this.clearReport(c);"route"===b?(this.getGrid().reconfigure("ReportRoute",this.routeColumns),this.getView().getLayout().setActiveItem("grid")):"events"===b?(this.getGrid().reconfigure("ReportEvents",this.eventsColumns),this.getView().getLayout().setActiveItem("grid")):"summary"===b?(this.getGrid().reconfigure("ReportSummary",this.summaryColumns),this.getView().getLayout().setActiveItem("grid")):"trips"===b?(this.getGrid().reconfigure("ReportTrips",this.tripsColumns),this.getView().getLayout().setActiveItem("grid")):
"stops"===b?(this.getGrid().reconfigure("ReportStops",this.stopsColumns),this.getView().getLayout().setActiveItem("grid")):"chart"===b&&this.getView().getLayout().setActiveItem("chart");this.updateButtons()},onGeocode:function(a){var b=Ext.getStore("ReportRoute").getById(a);b&&!b.get("address")&&Ext.Ajax.request({scope:this,method:"GET",url:"api/server/geocode",params:{latitude:b.get("latitude"),longitude:b.get("longitude")},success:function(a){b.set("address",a.responseText);b.commit();this.fireEvent("selectReport",
b)},failure:function(a){Traccar.app.showError(a)}})},routeColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.positionValid,dataIndex:"valid",renderer:Traccar.AttributeFormatter.getFormatter("valid")},{text:Strings.positionFixTime,dataIndex:"fixTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("fixTime")},{text:Strings.positionLatitude,dataIndex:"latitude",renderer:Traccar.AttributeFormatter.getFormatter("latitude")},
{text:Strings.positionLongitude,dataIndex:"longitude",renderer:Traccar.AttributeFormatter.getFormatter("longitude")},{text:Strings.positionAltitude,dataIndex:"altitude",renderer:Traccar.AttributeFormatter.getFormatter("altitude")},{text:Strings.positionSpeed,dataIndex:"speed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.positionAddress,dataIndex:"address",renderer:function(a,b,c){return a?Traccar.AttributeFormatter.getFormatter("address")(a):'\x3ca href\x3d"#" onclick\x3d"Ext.fireEvent(\'routegeocode\', '+
c.getId()+')" \x3e'+Strings.sharedShowAddress+"\x3c/a\x3e"}}],eventsColumns:[{text:Strings.positionFixTime,dataIndex:"serverTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("serverTime")},{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.sharedType,dataIndex:"type",renderer:function(a){return Traccar.app.getEventString(a)}},{text:Strings.sharedGeofence,dataIndex:"geofenceId",renderer:Traccar.AttributeFormatter.getFormatter("geofenceId")},
{text:Strings.sharedMaintenance,dataIndex:"maintenanceId",renderer:Traccar.AttributeFormatter.getFormatter("maintenanceId")}],summaryColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.sharedDistance,dataIndex:"distance",renderer:Traccar.AttributeFormatter.getFormatter("distance")},{text:Strings.reportAverageSpeed,dataIndex:"averageSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportMaximumSpeed,
dataIndex:"maxSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportEngineHours,dataIndex:"engineHours",renderer:Traccar.AttributeFormatter.getFormatter("duration")},{text:Strings.reportSpentFuel,dataIndex:"spentFuel",renderer:Traccar.AttributeFormatter.getFormatter("spentFuel")}],tripsColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.reportStartTime,dataIndex:"startTime",xtype:"datecolumn",
renderer:Traccar.AttributeFormatter.getFormatter("startTime")},{text:Strings.reportStartAddress,dataIndex:"startAddress",renderer:Traccar.AttributeFormatter.getFormatter("address")},{text:Strings.reportEndTime,dataIndex:"endTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("endTime")},{text:Strings.reportEndAddress,dataIndex:"endAddress",renderer:Traccar.AttributeFormatter.getFormatter("address")},{text:Strings.sharedDistance,dataIndex:"distance",renderer:Traccar.AttributeFormatter.getFormatter("distance")},
{text:Strings.reportAverageSpeed,dataIndex:"averageSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportMaximumSpeed,dataIndex:"maxSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportDuration,dataIndex:"duration",renderer:Traccar.AttributeFormatter.getFormatter("duration")},{text:Strings.reportSpentFuel,dataIndex:"spentFuel",renderer:Traccar.AttributeFormatter.getFormatter("spentFuel")},{text:Strings.sharedDriver,dataIndex:"driverUniqueId",
renderer:Traccar.AttributeFormatter.getFormatter("driverUniqueId")}],stopsColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.reportStartTime,dataIndex:"startTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("startTime")},{text:Strings.positionAddress,dataIndex:"address",renderer:Traccar.AttributeFormatter.getFormatter("address")},{text:Strings.reportEndTime,dataIndex:"endTime",xtype:"datecolumn",
renderer:Traccar.AttributeFormatter.getFormatter("endTime")},{text:Strings.reportDuration,dataIndex:"duration",renderer:Traccar.AttributeFormatter.getFormatter("duration")},{text:Strings.reportEngineHours,dataIndex:"engineHours",renderer:Traccar.AttributeFormatter.getFormatter("duration")},{text:Strings.reportSpentFuel,dataIndex:"spentFuel",renderer:Traccar.AttributeFormatter.getFormatter("spentFuel")}]});
Ext.define("Traccar.view.Report",{extend:Ext.panel.Panel,xtype:"reportView",controller:"report",title:Strings.reportTitle,tools:[{type:"close",tooltip:Strings.sharedHide,handler:"hideReports"}],tbar:{scrollable:!0,items:[{xtype:"tbtext",html:Strings.sharedType},{xtype:"combobox",reference:"reportTypeField",store:"ReportTypes",displayField:"name",valueField:"key",editable:!1,listeners:{change:"onTypeChange"}},"-",{text:Strings.reportConfigure,handler:"onConfigureClick"},"-",{text:Strings.reportShow,
reference:"showButton",disabled:!0,handler:"onReportClick"},{text:Strings.reportExport,reference:"exportButton",disabled:!0,handler:"onReportClick"},{text:Strings.reportClear,handler:"onClearClick"}]},layout:"card",items:[{xtype:"customGridPanel",itemId:"grid",listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[]},style:Traccar.Style.reportGridStyle},{xtype:"cartesian",itemId:"chart",plugins:{ptype:"chartitemevents",moveEvents:!0},
store:"ReportRoute",axes:[{title:Strings.reportChart,type:"numeric",position:"left"},{type:"time",position:"bottom",fields:["fixTime"]}],listeners:{itemclick:"onChartMarkerClick"},insetPadding:Traccar.Style.chartPadding}]});
Ext.define("Traccar.view.EventsController",{extend:Ext.app.ViewController,alias:"controller.events",config:{listen:{controller:{"*":{deselectevent:"deselectEvent"}},store:{"#Events":{add:"onAddEvent"}}}},init:function(){var a=this;setInterval(function(){a.getView().getView().refresh()},Traccar.Style.refreshPeriod);Traccar.app.isMobile()&&this.lookupReference("hideEventsButton").setHidden(!1)},onRemoveClick:function(){var a;if(a=this.getView().getSelectionModel().getSelection()[0])Ext.getStore("Events").remove(a),
(a=a.get("positionId"))&&!Ext.getStore("Events").findRecord("positionId",a,0,!1,!1,!0)&&Ext.getStore("EventPositions").remove(Ext.getStore("EventPositions").getById(a))},onClearClick:function(){Ext.getStore("Events").removeAll();Ext.getStore("EventPositions").removeAll()},onAddEvent:function(){this.lookupReference("scrollToLastButton").pressed&&this.getView().scrollBy(0,Number.POSITIVE_INFINITY,!0)},onScrollToLastClick:function(a,b){if(b)this.onAddEvent()},onHideEvents:function(){Traccar.app.showEvents(!1)},
deselectEvent:function(){this.getView().getSelectionModel().deselectAll()},onSelectionChange:function(a,b){var c;if(a=0<b.length?b[0]:null)(b=a.get("positionId"))?(c=Ext.getStore("EventPositions").getById(b))?this.fireEvent("selectevent",c):Ext.getStore("EventPositions").load({params:{id:b},scope:this,addRecords:!0,callback:function(a,b,c){c&&0<a.length&&this.fireEvent("selectevent",a[0])}}):this.fireEvent("selectevent");this.lookupReference("removeEventButton").setDisabled(!a)}});
Ext.define("Traccar.view.Events",{extend:Traccar.view.GridPanel,xtype:"eventsView",controller:"events",store:"Events",stateful:!0,stateId:"events-grid",title:Strings.reportEvents,sortableColumns:!1,header:!1,tbar:{componentCls:"toolbar-header-style",defaults:{xtype:"button",tooltipType:"title",stateEvents:["toggle"],enableToggle:!0,stateful:{pressed:!0}},items:[{xtype:"tbtext",html:Strings.reportEvents,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{glyph:"xf063@FontAwesome",pressed:!0,
toggleHandler:"onScrollToLastClick",stateId:"events-scroll-to-last-button",tooltip:Strings.eventsScrollToLast,reference:"scrollToLastButton"},{id:"soundButton",glyph:"xf0a2@FontAwesome",tooltip:Strings.sharedSound,stateId:"sound-button"},{glyph:"xf014@FontAwesome",tooltip:Strings.sharedRemove,handler:"onRemoveClick",reference:"removeEventButton",disabled:!0,stateful:!1,enableToggle:!1},{glyph:"xf1f8@FontAwesome",tooltip:Strings.reportClear,handler:"onClearClick",stateful:!1,enableToggle:!1},{glyph:"xf00d@FontAwesome",
tooltip:Strings.sharedHide,handler:"onHideEvents",reference:"hideEventsButton",hidden:!0,stateful:!1,enableToggle:!1}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedDevice,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{flex:2,text:Strings.positionEvent,dataIndex:"text"},{text:Strings.positionFixTime,dataIndex:"serverTime",renderer:Traccar.AttributeFormatter.getFormatter("lastUpdate")}]}});
Ext.define("Traccar.view.map.BaseMap",{extend:Ext.panel.Panel,xtype:"baseMapView",layout:"fit",getMap:function(){return this.map},getMapView:function(){return this.mapView},initMap:function(){var a,b,c,d,e,f;a=Traccar.app.getServer();b=Traccar.app.getPreference("map",null);c=a.get("bingKey");switch(b){case "custom":a=new ol.layer.Tile({source:new ol.source.XYZ({url:a.get("mapUrl"),attributions:""})});break;case "bingRoad":a=new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"Road"})});
break;case "bingAerial":a=new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"Aerial"})});break;case "bingHybrid":a=new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"AerialWithLabels"})});break;case "carto":a=new ol.layer.Tile({source:new ol.source.XYZ({url:"https://cartodb-basemaps-{a-d}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",attributions:'\x26copy; \x3ca href\x3d"http://www.openstreetmap.org/copyright"\x3eOpenStreetMap\x3c/a\x3e contributors, \x26copy; \x3ca href\x3d"https://carto.com/attributions"\x3eCARTO\x3c/a\x3e'})});
break;case "baidu":a=new ol.layer.Tile({source:new ol.source.XYZ({projection:"BD-MC",tileUrlFunction:function(a){var b=a[0],c=a[1];a=a[2];var d;d=((c<<b)+a)%5;0>c&&(c="M"+-c);0>a&&(a="M"+-a);return"http://online{}.map.bdimg.com/onlinelabel/?qt\x3dtile\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}\x26styles\x3dpl".replace("{}",0>d?d+5:d).replace("{x}",c).replace("{y}",a).replace("{z}",b)},tileGrid:new ol.tilegrid.TileGrid({extent:ol.proj.transformExtent([-180,-74,180,74],"EPSG:4326","BD-MC"),origin:[0,0],minZoom:3,
resolutions:[262144,131072,65536,32768,16384,8192,4096,2048,1024,512,256,128,64,32,16,8,4,2,1,.5]}),attributions:'\x26copy; \x3ca href\x3d"http://map.baidu.com/"\x3eBaidu\x3c/a\x3e'})});break;case "yandexMap":a=new ol.layer.Tile({source:new ol.source.XYZ({url:"https://vec0{1-4}.maps.yandex.net/tiles?l\x3dmap\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}",projection:"EPSG:3395",attributions:'\x26copy; \x3ca href\x3d"https://yandex.com/maps/"\x3eYandex\x3c/a\x3e'})});break;case "yandexSat":a=new ol.layer.Tile({source:new ol.source.XYZ({url:"https://sat0{1-4}.maps.yandex.net/tiles?l\x3dsat\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}",
projection:"EPSG:3395",attributions:'\x26copy; \x3ca href\x3d"https://yandex.com/maps/"\x3eYandex\x3c/a\x3e'})});break;case "osm":a=new ol.layer.Tile({source:new ol.source.OSM({})});break;default:a=new ol.layer.Tile({source:new ol.source.OSM({url:"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png"})})}b=Traccar.app.getPreference("latitude",Traccar.Style.mapDefaultLat);c=Traccar.app.getPreference("longitude",Traccar.Style.mapDefaultLon);d=Traccar.app.getPreference("zoom",Traccar.Style.mapDefaultZoom);
e=Traccar.app.getAttributePreference("web.maxZoom",Traccar.Style.mapMaxZoom);this.mapView=new ol.View({center:ol.proj.fromLonLat([c,b]),zoom:d,maxZoom:e});this.map=new ol.Map({target:this.body.dom.id,layers:[a],view:this.mapView});(a=Traccar.app.getPreference("poiLayer",null))&&this.map.addLayer(new ol.layer.Vector({source:new ol.source.Vector({url:a,format:new ol.format.KML})}));this.body.dom.tabIndex=0;switch(Traccar.app.getAttributePreference("distanceUnit","km")){case "mi":this.map.addControl(new ol.control.ScaleLine({units:"us"}));
break;case "nmi":this.map.addControl(new ol.control.ScaleLine({units:"nautical"}));break;default:this.map.addControl(new ol.control.ScaleLine)}f=this.map.getTarget();"string"===typeof f&&(f=Ext.get(f).dom);this.map.on("pointermove",function(a){this.forEachFeatureAtPixel(a.pixel,function(){return!0})?f.style.cursor="pointer":f.style.cursor=""});this.map.on("click",function(a){var b=this.map.getFeaturesAtPixel(a.pixel,{layerFilter:function(a){return!a.get("name")}});if(b)for(a=0;a<b.length;a++)this.fireEvent("selectfeature",
b[a]);else this.fireEvent("deselectfeature")},this)},listeners:{afterrender:function(){this.initMap()},resize:function(){this.map.updateSize()}}},function(){proj4.defs("BD-MC","+proj\x3dmerc +lon_0\x3d0 +units\x3dm +ellps\x3dclrk66 +no_defs");proj4.defs("EPSG:3395","+proj\x3dmerc +lon_0\x3d0 +k\x3d1 +x_0\x3d0 +y_0\x3d0 +datum\x3dWGS84 +units\x3dm +no_defs");ol.proj.get("EPSG:3395").setExtent([-2.0037508342789244E7,-2.0037508342789244E7,2.0037508342789244E7,2.0037508342789244E7])});
Ext.define("Traccar.DeviceImages",{singleton:!0,getImageSvg:function(a,b,c,d){var e,f,g,h,k;d=Ext.getStore("DeviceImages").findRecord("key",d||"default",0,!1,!1,!0);(f=Ext.clone(d.get("svg")))||(f=this.cloneDocument(d.get("svg")));g=parseFloat(f.documentElement.getAttribute("width"));h=parseFloat(f.documentElement.getAttribute("height"));k=d.get("fillId");Ext.isArray(k)||(k=[k]);for(e=0;e<k.length;e++)f.getElementById(k[e]).style.fill=a;a="rotate("+c+" "+g/2+" "+h/2+")";f.getElementById(d.get("rotateId")).setAttribute("transform",
a);b?(g*=Traccar.Style.mapScaleSelected,h*=Traccar.Style.mapScaleSelected,b="scale("+Traccar.Style.mapScaleSelected+") "):(g*=Traccar.Style.mapScaleNormal,h*=Traccar.Style.mapScaleNormal,b="scale("+Traccar.Style.mapScaleNormal+") ");d.get("scaleId")!==d.get("rotateId")?f.getElementById(d.get("scaleId")).setAttribute("transform",b):f.getElementById(d.get("scaleId")).setAttribute("transform",b+" "+a);f.documentElement.setAttribute("width",g);f.documentElement.setAttribute("height",h);f.documentElement.setAttribute("viewBox",
"0 0 "+g+" "+h);return f},formatSrc:function(a){return"data:image/svg+xml;charset\x3dutf-8,"+encodeURIComponent((new XMLSerializer).serializeToString(a.documentElement))},cloneDocument:function(a){var b;b=a.implementation.createDocument(a.namespaceURI,null,null);a=b.importNode(a.documentElement,!0);b.appendChild(a);return b},getImageIcon:function(a,b,c,d){var e,f,g;e=this.getImageSvg(a,b,c,d);f=parseFloat(e.documentElement.getAttribute("width"));g=parseFloat(e.documentElement.getAttribute("height"));
e=new ol.style.Icon({imgSize:[f,g],src:this.formatSrc(e)});e.fill=a;e.zoom=b;e.angle=c;e.category=d;return e}});
Ext.define("Traccar.view.map.MapMarkerController",{extend:Ext.app.ViewController,alias:"controller.mapMarker",config:{listen:{controller:{"*":{selectdevice:"selectDevice",selectreport:"selectReport",selectevent:"selectEvent"},devices:{deselectfeature:"deselectDevice"}},store:{"#Devices":{add:"updateDevice",update:"updateDevice",remove:"removeDevice"},"#VisibleDevices":{add:"updateVisibleDevices",update:"updateVisibleDevices",remove:"updateVisibleDevices",refresh:"filterDevices"},"#LatestPositions":{add:"updateLatest",
update:"updateLatest"},"#ReportRoute":{add:"addReportMarkers",load:"loadReport",clear:"clearReport"},"#Events":{remove:"clearEvent",clear:"clearEvent"}},component:{"#":{selectfeature:"selectFeature",deselectfeature:"deselectFeature"}}}},init:function(){this.latestMarkers={};this.reportMarkers={};this.accuracyCircles={};this.liveRoutes={};this.liveRouteLength=Traccar.app.getAttributePreference("web.liveRouteLength",10);this.selectZoom=Traccar.app.getAttributePreference("web.selectZoom",0)},getAreaStyle:function(a,
b){var c;b?c=ol.color.asArray(b):(c=ol.color.asArray(Traccar.Style.mapGeofenceColor),b=Traccar.Style.mapGeofenceColor);c[3]=Traccar.Style.mapGeofenceOverlayOpacity;c={fill:new ol.style.Fill({color:c}),stroke:new ol.style.Stroke({color:b,width:Traccar.Style.mapGeofenceWidth})};a&&(c.text=new ol.style.Text({text:a,overflow:!0,fill:new ol.style.Fill({color:Traccar.Style.mapGeofenceTextColor}),stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),
font:Traccar.Style.mapTextFont}));return new ol.style.Style(c)},getDeviceColor:function(a){switch(a.get("status")){case "online":return Traccar.Style.mapColorOnline;case "offline":return Traccar.Style.mapColorOffline;default:return Traccar.Style.mapColorUnknown}},updateDevice:function(a,b){var c,d,e;Ext.isArray(b)||(b=[b]);for(a=0;a<b.length;a++)if(c=b[a],d=c.get("id"),d in this.latestMarkers){d=this.latestMarkers[d];e=d.getStyle();if(e.getImage().fill!==this.getDeviceColor(c)||e.getImage().category!==
c.get("category"))this.updateDeviceMarker(e,this.getDeviceColor(c),c.get("category")),d.changed();e.getText().getText()!==c.get("name")&&(e.getText().setText(c.get("name")),d.changed())}},removeDevice:function(a,b){var c,d;Ext.isArray(b)||(b=[b]);d=this.getView().getMarkersSource();for(a=0;a<b.length;a++)c=b[a].get("id"),this.latestMarkers[c]&&(d.getFeatureById(this.latestMarkers[c].getId())&&d.removeFeature(this.latestMarkers[c]),delete this.latestMarkers[c]),this.accuracyCircles[c]&&(d.getFeatureById(this.accuracyCircles[c].getId())&&
d.removeFeature(this.accuracyCircles[c]),delete this.accuracyCircles[c]),this.liveRoutes[c]&&(d.getFeatureById(this.liveRoutes[c].getId())&&d.removeFeature(this.liveRoutes[c]),delete this.liveRoutes[c])},updateLatest:function(a,b){var c,d,e;Ext.isArray(b)||(b=[b]);e=Ext.getStore("Devices");for(a=0;a<b.length;a++)if(c=b[a],d=e.getById(c.get("deviceId")))this.updateAccuracy(c,d),this.updateLatestMarker(c,d),this.updateLiveRoute(c,d)},updateAccuracy:function(a,b){var c,d,e,f;d=this.getView().getMapView();
e=this.accuracyCircles[a.get("deviceId")];a.get("accuracy")?(f=d.getProjection(),c=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]),f=ol.proj.getPointResolution(f,d.getResolution(),c),d=a.get("accuracy")/ol.proj.METERS_PER_UNIT.m*d.getResolution()/f,e?(e.getGeometry().setCenter(c),e.getGeometry().setRadius(d)):(e=new ol.Feature(new ol.geom.Circle(c,d)),e.setStyle(this.getAreaStyle(null,Traccar.Style.mapAccuracyColor)),e.setId(a.get("deviceId")),this.accuracyCircles[a.get("deviceId")]=e,
this.isDeviceVisible(b)&&this.getView().getAccuracySource().addFeature(e))):(e&&this.getView().getAccuracySource().getFeatureById(e.getId())&&this.getView().getAccuracySource().removeFeature(e),delete this.accuracyCircles[a.get("deviceId")])},updateLatestMarker:function(a,b){var c,d,e,f;c=new ol.geom.Point(ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]));d=a.get("deviceId");d in this.latestMarkers?(e=this.latestMarkers[d],f=e.getStyle(),f.getImage().angle!==a.get("course")&&this.rotateMarker(f,
a.get("course")),e.setGeometry(c)):(e=new ol.Feature(c),e.set("record",b),f=this.getLatestMarker(this.getDeviceColor(b),a.get("course"),b.get("category")),f.getText().setText(b.get("name")),e.setStyle(f),e.setId(b.get("id")),this.latestMarkers[d]=e,this.isDeviceVisible(b)&&this.getView().getMarkersSource().addFeature(e));e===this.selectedMarker&&this.lookupReference("deviceFollowButton").pressed&&this.getView().getMapView().setCenter(e.getGeometry().getCoordinates())},updateLiveRoute:function(a,b){var c,
d;c=a.get("deviceId");if(c in this.liveRoutes){if(b=this.liveRoutes[c].getGeometry().getCoordinates(),d=b[b.length-1],a=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]),d[0]!==a[0]||d[1]!==a[1])b.length>=this.liveRouteLength&&b.shift(),b.push(a),this.liveRoutes[c].getGeometry().setCoordinates(b)}else a=new ol.Feature({geometry:new ol.geom.LineString([ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")])])}),a.setStyle(this.getRouteStyle(c)),a.setId(c),this.liveRoutes[c]=a,this.isDeviceVisible(b)&&
this.getView().getMarkersSource().addFeature(a)},loadReport:function(a,b){var c,d;if(b)for(this.addReportMarkers(a,b),d=this.getView().getRouteSource(),this.reportRoute=[],a=0;a<b.length;a++){c=b[a];c=ol.proj.fromLonLat([c.get("longitude"),c.get("latitude")]);if(0===a||b[a].get("deviceId")!==b[a-1].get("deviceId"))this.reportRoute.push(new ol.Feature({geometry:new ol.geom.LineString([])})),this.reportRoute[this.reportRoute.length-1].setStyle(this.getRouteStyle(b[a].get("deviceId"))),d.addFeature(this.reportRoute[this.reportRoute.length-
1]);this.reportRoute[this.reportRoute.length-1].getGeometry().appendCoordinate(c)}},addReportMarker:function(a){var b;b=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]);b=new ol.geom.Point(b);b=new ol.Feature(b);b.set("record",a);a=this.getReportMarker(a.get("deviceId"),a.get("course"));b.setStyle(a);this.getView().getMarkersSource().addFeature(b);return b},addReportMarkers:function(a,b){var c;this.clearReport();for(c=0;c<b.length;c++)a.showMarkers&&(this.reportMarkers[b[c].get("id")]=this.addReportMarker(b[c]));
this.zoomToAllPositions(b)},clearReport:function(){var a,b,c;c=this.getView().getRouteSource();if(this.reportRoute){for(b=0;b<this.reportRoute.length;b++)c.removeFeature(this.reportRoute[b]);this.reportRoute=null}if(this.reportMarkers){b=this.getView().getMarkersSource();for(a in this.reportMarkers)this.reportMarkers.hasOwnProperty(a)&&b.removeFeature(this.reportMarkers[a]);this.reportMarkers={}}this.selectedMarker&&!this.selectedMarker.get("event")&&this.selectedMarker.get("record")instanceof Traccar.model.Position&&
(this.selectedMarker=null)},clearEvent:function(){this.selectedMarker&&this.selectedMarker.get("event")&&this.selectMarker(null,!1)},getRouteStyle:function(a){return new ol.style.Style({stroke:new ol.style.Stroke({color:Traccar.app.getReportColor(a),width:Traccar.Style.mapRouteWidth})})},getMarkerStyle:function(a,b,c,d){a=Traccar.DeviceImages.getImageIcon(b,a,c,d);return new ol.style.Style({image:a,text:new ol.style.Text({textBaseline:"bottom",fill:new ol.style.Fill({color:Traccar.Style.mapTextColor}),
stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),offsetY:-a.getSize()[1]/2-Traccar.Style.mapTextOffset,font:Traccar.Style.mapTextFont})})},getLatestMarker:function(a,b,c){return this.getMarkerStyle(!1,a,b,c)},getReportMarker:function(a,b){return this.getMarkerStyle(!1,Traccar.app.getReportColor(a),b,"arrow")},resizeMarker:function(a,b){var c;b=Traccar.DeviceImages.getImageIcon(a.getImage().fill,b,a.getImage().angle,a.getImage().category);
c=a.getText();c.setOffsetY(-b.getSize()[1]/2-Traccar.Style.mapTextOffset);a.setText(c);a.setImage(b)},rotateMarker:function(a,b){a.setImage(Traccar.DeviceImages.getImageIcon(a.getImage().fill,a.getImage().zoom,b,a.getImage().category))},updateDeviceMarker:function(a,b,c){b=Traccar.DeviceImages.getImageIcon(b,a.getImage().zoom,a.getImage().angle,c);c=a.getText();c.setOffsetY(-b.getSize()[1]/2-Traccar.Style.mapTextOffset);a.setText(c);a.setImage(b)},selectMarker:function(a,b){this.selectedMarker&&(this.selectedMarker.get("event")?
(this.getView().getMarkersSource().removeFeature(this.selectedMarker),a&&a.get("event")||this.fireEvent("deselectevent")):!Ext.getStore("ReportRoute").showMarkers&&this.selectedMarker.get("record")instanceof Traccar.model.Position?(this.getView().getMarkersSource().removeFeature(this.selectedMarker),delete this.reportMarkers[this.selectedMarker.get("record").get("id")]):(this.resizeMarker(this.selectedMarker.getStyle(),!1),this.selectedMarker.getStyle().setZIndex(0),this.selectedMarker.changed()));
a&&(this.resizeMarker(a.getStyle(),!0),a.getStyle().setZIndex(1),a.changed(),b&&(this.getView().getMapView().setCenter(a.getGeometry().getCoordinates()),0!==this.selectZoom&&this.selectZoom>this.getView().getMapView().getZoom()&&this.getView().getMapView().setZoom(this.selectZoom)));this.selectedMarker=a},selectDevice:function(a,b){this.selectMarker(this.latestMarkers[a.get("id")],b)},selectReport:function(a,b){a instanceof Traccar.model.Position&&(Ext.getStore("ReportRoute").showMarkers||(this.reportMarkers[a.get("id")]=
this.addReportMarker(a)),this.selectMarker(this.reportMarkers[a.get("id")],b))},selectEvent:function(a){this.fireEvent("deselectfeature");a?(a=this.addReportMarker(a),a.set("event",!0),this.selectMarker(a,!0)):this.selectedMarker&&this.selectedMarker.get("event")&&this.selectMarker(null,!1)},selectFeature:function(a){(a=a.get("record"))&&(a instanceof Traccar.model.Device?this.fireEvent("selectdevice",a,!1):this.fireEvent("selectreport",a,!1))},deselectFeature:function(){this.deselectDevice();this.fireEvent("deselectfeature")},
deselectDevice:function(){this.selectMarker(null,!1)},zoomToAllPositions:function(a){var b,c,d,e,f,g;for(b=0;b<a.length;b++)c=ol.proj.fromLonLat([a[b].get("longitude"),a[b].get("latitude")]),0===b?(d=f=c[0],e=g=c[1]):(d=Math.min(c[0],d),e=Math.min(c[1],e),f=Math.max(c[0],f),g=Math.max(c[1],g));d!==f||e!==g?this.getView().getMapView().fit([d,e,f,g]):c&&this.getView().getMapView().fit(new ol.geom.Point(c))},updateVisibleDevices:function(a,b){var c;Ext.isArray(b)||(b=[b]);for(a=0;a<b.length;a++)c=b[a],
c.get("id")in this.latestMarkers&&this.updateDeviceVisibility(c)},isDeviceVisible:function(a){return Ext.getStore("VisibleDevices").contains(a)},updateDeviceVisibility:function(a){var b,c,d;b=a.get("id");d=this.latestMarkers[b];c=this.accuracyCircles[b];b=this.liveRoutes[b];this.isDeviceVisible(a)?(d&&!this.getView().getMarkersSource().getFeatureById(d.getId())&&this.getView().getMarkersSource().addFeature(d),c&&!this.getView().getAccuracySource().getFeatureById(c.getId())&&this.getView().getAccuracySource().addFeature(c),
b&&!this.getView().getLiveRouteSource().getFeatureById(b.getId())&&this.getView().getLiveRouteSource().addFeature(b)):(d&&this.getView().getMarkersSource().getFeatureById(d.getId())&&this.getView().getMarkersSource().removeFeature(d),c&&this.getView().getAccuracySource().getFeatureById(c.getId())&&this.getView().getAccuracySource().removeFeature(c),b&&this.getView().getLiveRouteSource().getFeatureById(b.getId())&&this.getView().getLiveRouteSource().removeFeature(b))},filterDevices:function(){Ext.getStore("Devices").each(this.updateDeviceVisibility,
this,!1)}});
Ext.define("Traccar.GeofenceConverter",{singleton:!0,wktToGeometry:function(a,b){var c,d=[],e,f;if(0===b.lastIndexOf("POLYGON",0)){if(b=b.match(/\([^()]+\)/),null!==b&&(b=b[0].match(/-?\d+\.?\d*/g),null!==b)){c=a.getProjection();for(a=0;a<b.length;a+=2)e=Number(b[a]),f=Number(b[a+1]),d.push(ol.proj.transform([f,e],"EPSG:4326",c));c=new ol.geom.Polygon([d])}}else if(0===b.lastIndexOf("CIRCLE",0))b=b.match(/\([^()]+\)/),null!==b&&(b=b[0].match(/-?\d+\.?\d*/g),null!==b&&(c=a.getProjection(),d=ol.proj.transform([Number(b[1]),
Number(b[0])],"EPSG:4326",c),a=a.getResolution(),c=ol.proj.getPointResolution(c,a,d),b=Number(b[2])/ol.proj.METERS_PER_UNIT.m*(a/c),c=new ol.geom.Circle(d,b)));else if(0===b.lastIndexOf("LINESTRING",0)&&(b=b.match(/\([^()]+\)/),null!==b&&(b=b[0].match(/-?\d+\.?\d*/g),null!==b))){c=a.getProjection();for(a=0;a<b.length;a+=2)e=Number(b[a]),f=Number(b[a+1]),d.push(ol.proj.transform([f,e],"EPSG:4326",c));c=new ol.geom.LineString(d)}return c},geometryToWkt:function(a,b){var c,d;if(b instanceof ol.geom.Circle)c=
b.getCenter(),b=b.getRadius(),b=[c[0]+b,c[1]],c=ol.proj.transform(c,a,"EPSG:4326"),d=new ol.Sphere(6378137),a=d.haversineDistance(c,ol.proj.transform(b,a,"EPSG:4326")),c="CIRCLE ("+(c[1]+" "+c[0]+", "),c+=a.toFixed(1)+")";else if(b instanceof ol.geom.Polygon){b.transform(a,"EPSG:4326");b=b.getCoordinates();c="POLYGON((";for(a=0;a<b[0].length;a+=1)c+=b[0][a][1]+" "+b[0][a][0]+", ";c=c.substring(0,c.length-2)+"))"}else if(b instanceof ol.geom.LineString){b.transform(a,"EPSG:4326");b=b.getCoordinates();
c="LINESTRING (";for(a=0;a<b.length;a+=1)c+=b[a][1]+" "+b[a][0]+", ";c=c.substring(0,c.length-2)+")"}return c}});
Ext.define("Traccar.view.map.MapController",{extend:Traccar.view.map.MapMarkerController,alias:"controller.map",config:{listen:{controller:{"*":{mapstaterequest:"getMapState",zoomtoalldevices:"zoomToAllDevices"}},store:{"#Geofences":{load:"updateGeofences",add:"updateGeofences",update:"updateGeofences",remove:"updateGeofences"}}}},init:function(){this.callParent();this.lookupReference("showReportsButton").setVisible(Traccar.app.isMobile()&&!Traccar.app.getBooleanAttributePreference("ui.disableReport"));
this.lookupReference("showEventsButton").setVisible(Traccar.app.isMobile()&&!Traccar.app.getBooleanAttributePreference("ui.disableEvents"))},showReports:function(){Traccar.app.showReports(!0)},showEvents:function(){Traccar.app.showEvents(!0)},onFollowClick:function(a,b){b&&this.selectedMarker&&this.getView().getMapView().setCenter(this.selectedMarker.getGeometry().getCoordinates())},showLiveRoutes:function(a){this.getView().getLiveRouteLayer().setVisible(a.pressed)},getMapState:function(){var a,b;
a=this.getView().getMapView().getProjection();b=ol.proj.transform(this.getView().getMapView().getCenter(),a,"EPSG:4326");a=this.getView().getMapView().getZoom();this.fireEvent("mapstate",b[1],b[0],a)},updateGeofences:function(){this.getView().getGeofencesSource().clear();this.lookupReference("showGeofencesButton").pressed&&Ext.getStore("Geofences").each(function(a){var b=new ol.Feature(Traccar.GeofenceConverter.wktToGeometry(this.getView().getMapView(),a.get("area")));b.setStyle(this.getAreaStyle(a.get("name"),
a.get("attributes")?a.get("attributes").color:null));this.getView().getGeofencesSource().addFeature(b);return!0},this)},zoomToAllDevices:function(){this.zoomToAllPositions(Ext.getStore("LatestPositions").getData().items)}});
Ext.define("Traccar.view.dialog.MapPickerController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.mapPicker",config:{listen:{controller:{"*":{mapstate:"setMapState"}}}},getMapState:function(){this.fireEvent("mapstaterequest")},setMapState:function(a,b,c){this.lookupReference("latitude").setValue(a);this.lookupReference("longitude").setValue(b);this.lookupReference("zoom").setValue(c)}});
Ext.define("Traccar.view.dialog.UserController",{extend:Traccar.view.dialog.MapPickerController,alias:"controller.user",init:function(){Traccar.app.getUser().get("administrator")&&(this.lookupReference("adminField").setDisabled(!1),this.lookupReference("deviceLimitField").setDisabled(!1),this.lookupReference("userLimitField").setDisabled(!1));if(Traccar.app.getUser().get("administrator")||!this.getView().selfEdit)this.lookupReference("readonlyField").setDisabled(!1),this.lookupReference("disabledField").setDisabled(!1),
this.lookupReference("expirationTimeField").setDisabled(!1),this.lookupReference("deviceReadonlyField").setDisabled(!1),this.lookupReference("limitCommandsField").setDisabled(!1)},symbols:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",generateToken:function(){var a,b="";for(a=0;32>a;a++)b+=this.symbols.charAt(Math.floor(Math.random()*this.symbols.length));this.lookupReference("tokenField").setValue(b)},testNotification:function(){Ext.Ajax.request({url:"api/notifications/test",method:"POST",
failure:function(a){Traccar.app.showError(a)}})},onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();b===Traccar.app.getUser()?b.save():(c=Ext.getStore("Users"),b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}}));a.up("window").close()}});
Ext.define("Traccar.view.dialog.User",{extend:Traccar.view.dialog.BaseEdit,controller:"user",title:Strings.settingsUser,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedPreferences,collapsible:!0,
collapsed:!0,items:[{xtype:"textfield",name:"phone",fieldLabel:Strings.sharedPhone},{xtype:"clearableComboBox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key"},{xtype:"numberfield",reference:"latitude",name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"longitude",name:"longitude",fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",
reference:"zoom",name:"zoom",fieldLabel:Strings.serverZoom},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"twelveHourFormat",fieldLabel:Strings.settingsTwelveHourFormat},{xtype:"clearableComboBox",name:"coordinateFormat",fieldLabel:Strings.settingsCoordinateFormat,store:"CoordinateFormats",displayField:"name",valueField:"key"},{xtype:"textfield",name:"poiLayer",fieldLabel:Strings.mapPoiLayer}]},{xtype:"fieldset",title:Strings.sharedPermissions,collapsible:!0,collapsed:!0,items:[{xtype:"checkboxfield",
inputValue:!0,uncheckedValue:!1,name:"disabled",fieldLabel:Strings.sharedDisabled,disabled:!0,reference:"disabledField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"administrator",fieldLabel:Strings.userAdmin,disabled:!0,reference:"adminField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"readonly",fieldLabel:Strings.serverReadonly,disabled:!0,reference:"readonlyField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"deviceReadonly",fieldLabel:Strings.userDeviceReadonly,
disabled:!0,reference:"deviceReadonlyField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"limitCommands",fieldLabel:Strings.userLimitCommands,disabled:!0,reference:"limitCommandsField"},{xtype:"datefield",name:"expirationTime",fieldLabel:Strings.userExpirationTime,disabled:!0,reference:"expirationTimeField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat},{xtype:"numberfield",name:"deviceLimit",fieldLabel:Strings.userDeviceLimit,disabled:!0,reference:"deviceLimitField"},
{xtype:"numberfield",name:"userLimit",fieldLabel:Strings.userUserLimit,disabled:!0,reference:"userLimitField"},{xtype:"textfield",name:"token",reference:"tokenField",fieldLabel:Strings.userToken,triggers:{generate:{cls:"iconCls: x-fa fa-refresh",handler:"generateToken"}}}]}]},buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{glyph:"xf041@FontAwesome",minWidth:0,handler:"getMapState",tooltip:Strings.sharedGetMapState,tooltipType:"title"},{glyph:"xf003@FontAwesome",minWidth:0,handler:"testNotification",
hidden:!0,reference:"testNotificationButton",tooltip:Strings.sharedTestNotification,tooltipType:"title"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.Server",{extend:Traccar.view.dialog.BaseEdit,controller:"mapPicker",title:Strings.serverTitle,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedPreferences,items:[{xtype:"clearableComboBox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key"},{xtype:"textfield",name:"bingKey",fieldLabel:Strings.mapBingKey},{xtype:"textfield",name:"mapUrl",fieldLabel:Strings.mapCustom},{xtype:"numberfield",reference:"latitude",
name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"longitude",name:"longitude",fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"zoom",name:"zoom",fieldLabel:Strings.serverZoom},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"twelveHourFormat",fieldLabel:Strings.settingsTwelveHourFormat},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,
name:"forceSettings",fieldLabel:Strings.serverForceSettings},{xtype:"clearableComboBox",name:"coordinateFormat",fieldLabel:Strings.settingsCoordinateFormat,store:"CoordinateFormats",displayField:"name",valueField:"key"},{xtype:"textfield",name:"poiLayer",fieldLabel:Strings.mapPoiLayer}]},{xtype:"fieldset",title:Strings.sharedPermissions,collapsible:!0,collapsed:!0,items:[{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"registration",fieldLabel:Strings.serverRegistration},{xtype:"checkboxfield",
inputValue:!0,uncheckedValue:!1,name:"readonly",fieldLabel:Strings.serverReadonly},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"deviceReadonly",fieldLabel:Strings.userDeviceReadonly},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"limitCommands",fieldLabel:Strings.userLimitCommands}]}]},buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{glyph:"xf041@FontAwesome",minWidth:0,handler:"getMapState",tooltip:Strings.sharedGetMapState,tooltipType:"title"},
{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.permissions.Devices",{extend:Traccar.view.permissions.Base,xtype:"linkDevicesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.sharedPhone,dataIndex:"phone",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:"string"},{text:Strings.deviceModel,dataIndex:"model",
flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:"string"},{text:Strings.deviceContact,dataIndex:"contact",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:"string"},{text:Strings.sharedDisabled,dataIndex:"disabled",flex:1,minWidth:Traccar.Style.columnWidthNormal,renderer:Traccar.AttributeFormatter.getFormatter("disabled"),hidden:!0,filter:"boolean"},{text:Strings.groupDialog,dataIndex:"groupId",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:{type:"list",
labelField:"name",store:"AllGroups"},renderer:Traccar.AttributeFormatter.getFormatter("groupId")}]}});Ext.define("Traccar.view.permissions.Groups",{extend:Traccar.view.permissions.Base,xtype:"linkGroupsView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"},{text:Strings.groupDialog,dataIndex:"groupId",flex:1,minWidth:Traccar.Style.columnWidthNormal,hidden:!0,filter:{type:"list",labelField:"name",store:"AllGroups"},renderer:Traccar.AttributeFormatter.getFormatter("groupId")}]}});
Ext.define("Traccar.view.permissions.Calendars",{extend:Traccar.view.permissions.Base,xtype:"linkCalendarsView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"}]}});Ext.define("Traccar.view.permissions.Users",{extend:Traccar.view.permissions.Base,xtype:"linkUsersView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal,filter:"string"}]}});
Ext.define("Traccar.view.edit.UsersController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.users",objectModel:"Traccar.model.User",objectDialog:"Traccar.view.dialog.User",removeTitle:Strings.settingsUser,init:function(){Ext.getStore("Users").load();this.lookupReference("userUsersButton").setHidden(!Traccar.app.getUser().get("administrator"));this.lookupReference("userDriversButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableDrivers"));
this.lookupReference("userAttributesButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableComputedAttributes"));this.lookupReference("userCalendarsButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableCalendars"));this.lookupReference("userCommandsButton").setHidden(Traccar.app.getPreference("limitCommands",!1));this.lookupReference("userMaintenancesButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableMaintenances"))},
onEditClick:function(){var a,b=this.getView().getSelectionModel().getSelection()[0];a=Ext.create("Traccar.view.dialog.User",{selfEdit:b.get("id")===Traccar.app.getUser().get("id")});a.down("form").loadRecord(b);a.show()},onAddClick:function(){var a,b;a=Ext.create("Traccar.model.User");Traccar.app.getUser().get("administrator")&&a.set("deviceLimit",-1);Traccar.app.getUser().get("expirationTime")&&a.set("expirationTime",Traccar.app.getUser().get("expirationTime"));b=Ext.create("Traccar.view.dialog.User");
b.down("form").loadRecord(a);b.show()},onDevicesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.getStore("AllGroups").load();Ext.create("Traccar.view.BaseWindow",{title:Strings.deviceTitle,items:{xtype:"linkDevicesView",baseObjectName:"userId",linkObjectName:"deviceId",storeName:"AllDevices",linkStoreName:"Devices",baseObject:a.getId()}}).show()},onGroupsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",
{title:Strings.settingsGroups,items:{xtype:"linkGroupsView",baseObjectName:"userId",linkObjectName:"groupId",storeName:"AllGroups",linkStoreName:"Groups",baseObject:a.getId()}}).show()},onGeofencesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"linkGeofencesView",baseObjectName:"userId",linkObjectName:"geofenceId",storeName:"AllGeofences",linkStoreName:"Geofences",baseObject:a.getId()}}).show()},
onNotificationsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedNotifications,items:{xtype:"linkNotificationsView",baseObjectName:"userId",linkObjectName:"notificationId",storeName:"AllNotifications",linkStoreName:"Notifications",baseObject:a.getId()}}).show()},onCalendarsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedCalendars,
items:{xtype:"linkCalendarsView",baseObjectName:"userId",linkObjectName:"calendarId",storeName:"AllCalendars",linkStoreName:"Calendars",baseObject:a.getId()}}).show()},onUsersClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsUsers,items:{xtype:"linkUsersView",baseObjectName:"userId",linkObjectName:"managedUserId",storeName:"Users",baseObject:a.getId()}}).show()},onAttributesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];
Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedComputedAttributes,items:{xtype:"linkComputedAttributesView",baseObjectName:"userId",linkObjectName:"attributeId",storeName:"AllComputedAttributes",linkStoreName:"ComputedAttributes",baseObject:a.getId()}}).show()},onDriversClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedDrivers,items:{xtype:"linkDriversView",baseObjectName:"userId",linkObjectName:"driverId",
storeName:"AllDrivers",linkStoreName:"Drivers",baseObject:a.getId()}}).show()},onCommandsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedSavedCommands,items:{xtype:"linkSavedCommandsView",baseObjectName:"userId",linkObjectName:"commandId",storeName:"AllCommands",linkStoreName:"Commands",baseObject:a.getId()}}).show()},onMaintenancesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",
{title:Strings.sharedMaintenances,items:{xtype:"linkMaintenancesView",baseObjectName:"userId",linkObjectName:"maintenanceId",storeName:"AllMaintenances",linkStoreName:"Maintenances",baseObject:a.getId()}}).show()},onSelectionChange:function(a,b){var c=0===b.length;this.lookupReference("userDevicesButton").setDisabled(c);this.lookupReference("userGroupsButton").setDisabled(c);this.lookupReference("userGeofencesButton").setDisabled(c);this.lookupReference("userNotificationsButton").setDisabled(c);this.lookupReference("userCalendarsButton").setDisabled(c);
this.lookupReference("userAttributesButton").setDisabled(c);this.lookupReference("userDriversButton").setDisabled(c);this.lookupReference("userCommandsButton").setDisabled(c);this.lookupReference("userMaintenancesButton").setDisabled(c);this.lookupReference("userUsersButton").setDisabled(c||0===b[0].get("userLimit"));this.callParent(arguments)}});
Ext.define("Traccar.view.edit.Users",{extend:Traccar.view.GridPanel,xtype:"usersView",controller:"users",store:"Users",tbar:{xtype:"editToolbar",scrollable:!0,items:[{disabled:!0,handler:"onGeofencesClick",reference:"userGeofencesButton",glyph:"xf21d@FontAwesome",tooltip:Strings.sharedGeofences,tooltipType:"title"},{disabled:!0,handler:"onDevicesClick",reference:"userDevicesButton",glyph:"xf248@FontAwesome",tooltip:Strings.deviceTitle,tooltipType:"title"},{disabled:!0,handler:"onGroupsClick",reference:"userGroupsButton",
glyph:"xf247@FontAwesome",tooltip:Strings.settingsGroups,tooltipType:"title"},{disabled:!0,handler:"onUsersClick",reference:"userUsersButton",glyph:"xf0c0@FontAwesome",tooltip:Strings.settingsUsers,tooltipType:"title"},{disabled:!0,handler:"onNotificationsClick",reference:"userNotificationsButton",glyph:"xf003@FontAwesome",tooltip:Strings.sharedNotifications,tooltipType:"title"},{disabled:!0,handler:"onCalendarsClick",reference:"userCalendarsButton",glyph:"xf073@FontAwesome",tooltip:Strings.sharedCalendars,
tooltipType:"title"},{disabled:!0,handler:"onAttributesClick",reference:"userAttributesButton",glyph:"xf0ae@FontAwesome",tooltip:Strings.sharedComputedAttributes,tooltipType:"title"},{disabled:!0,handler:"onDriversClick",reference:"userDriversButton",glyph:"xf2c2@FontAwesome",tooltip:Strings.sharedDrivers,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onCommandsClick",reference:"userCommandsButton",glyph:"xf093@FontAwesome",tooltip:Strings.sharedSavedCommands,tooltipType:"title"},{xtype:"button",
disabled:!0,handler:"onMaintenancesClick",reference:"userMaintenancesButton",glyph:"xf0ad@FontAwesome",tooltip:Strings.sharedMaintenances,tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.userEmail,dataIndex:"email",filter:"string"},{text:Strings.userAdmin,dataIndex:"administrator",renderer:Traccar.AttributeFormatter.getFormatter("administrator"),
filter:"boolean"},{text:Strings.serverReadonly,dataIndex:"readonly",hidden:!0,renderer:Traccar.AttributeFormatter.getFormatter("readonly"),filter:"boolean"},{text:Strings.userDeviceReadonly,dataIndex:"deviceReadonly",renderer:Traccar.AttributeFormatter.getFormatter("deviceReadonly"),hidden:!0,filter:"boolean"},{text:Strings.sharedDisabled,dataIndex:"disabled",renderer:Traccar.AttributeFormatter.getFormatter("disabled"),filter:"boolean"},{text:Strings.userExpirationTime,dataIndex:"expirationTime",
hidden:!0,renderer:Traccar.AttributeFormatter.getFormatter("expirationTime"),filter:"date"}]}});
Ext.define("Traccar.view.dialog.Group",{extend:Traccar.view.dialog.BaseEdit,title:Strings.groupDialog,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"clearableComboBox",name:"groupId",fieldLabel:Strings.groupParent,store:"Groups",queryMode:"local",displayField:"name",valueField:"id"}]}]}});
Ext.define("Traccar.view.edit.GroupsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.groups",objectModel:"Traccar.model.Group",objectDialog:"Traccar.view.dialog.Group",removeTitle:Strings.groupDialog,init:function(){this.lookupReference("toolbarDriversButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableDrivers"));this.lookupReference("toolbarAttributesButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableComputedAttributes"));
this.lookupReference("toolbarCommandsButton").setHidden(Traccar.app.getPreference("limitCommands",!1));this.lookupReference("toolbarMaintenancesButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableMaintenances"))},onGeofencesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"linkGeofencesView",baseObjectName:"groupId",linkObjectName:"geofenceId",
storeName:"Geofences",baseObject:a.getId()}}).show()},onAttributesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedComputedAttributes,items:{xtype:"linkComputedAttributesView",baseObjectName:"groupId",linkObjectName:"attributeId",storeName:"ComputedAttributes",baseObject:a.getId()}}).show()},onDriversClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedDrivers,
items:{xtype:"linkDriversView",baseObjectName:"groupId",linkObjectName:"driverId",storeName:"Drivers",baseObject:a.getId()}}).show()},onCommandsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedSavedCommands,items:{xtype:"linkSavedCommandsView",baseObjectName:"groupId",linkObjectName:"commandId",storeName:"Commands",baseObject:a.getId()}}).show()},onNotificationsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];
Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedNotifications,items:{xtype:"linkNotificationsView",baseObjectName:"groupId",linkObjectName:"notificationId",storeName:"Notifications",baseObject:a.getId()}}).show()},onMaintenancesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedMaintenances,items:{xtype:"linkMaintenancesView",baseObjectName:"groupId",linkObjectName:"maintenanceId",storeName:"Maintenances",
baseObject:a.getId()}}).show()},onSelectionChange:function(a,b){var c=0===b.length;this.lookupReference("toolbarGeofencesButton").setDisabled(c);this.lookupReference("toolbarAttributesButton").setDisabled(c);this.lookupReference("toolbarDriversButton").setDisabled(c);this.lookupReference("toolbarCommandsButton").setDisabled(c);this.lookupReference("toolbarNotificationsButton").setDisabled(c);this.lookupReference("toolbarMaintenancesButton").setDisabled(c);this.callParent(arguments)}});
Ext.define("Traccar.view.edit.Groups",{extend:Traccar.view.GridPanel,xtype:"groupsView",controller:"groups",store:"Groups",tbar:{xtype:"editToolbar",items:[{xtype:"button",disabled:!0,handler:"onGeofencesClick",reference:"toolbarGeofencesButton",glyph:"xf21d@FontAwesome",tooltip:Strings.sharedGeofences,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onAttributesClick",reference:"toolbarAttributesButton",glyph:"xf0ae@FontAwesome",tooltip:Strings.sharedComputedAttributes,tooltipType:"title"},
{xtype:"button",disabled:!0,handler:"onDriversClick",reference:"toolbarDriversButton",glyph:"xf2c2@FontAwesome",tooltip:Strings.sharedDrivers,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onCommandsClick",reference:"toolbarCommandsButton",glyph:"xf093@FontAwesome",tooltip:Strings.sharedSavedCommands,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onNotificationsClick",reference:"toolbarNotificationsButton",glyph:"xf003@FontAwesome",tooltip:Strings.sharedNotifications,tooltipType:"title"},
{xtype:"button",disabled:!0,handler:"onMaintenancesClick",reference:"toolbarMaintenancesButton",glyph:"xf0ad@FontAwesome",tooltip:Strings.sharedMaintenances,tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.groupDialog,dataIndex:"groupId",hidden:!0,filter:{type:"list",labelField:"name",store:"AllGroups"},renderer:Traccar.AttributeFormatter.getFormatter("groupId")}]}});
Ext.define("Traccar.view.map.GeofenceMapController",{extend:Ext.app.ViewController,alias:"controller.geofenceMap",config:{listen:{controller:{"*":{mapstate:"setMapState"}}}},onSaveClick:function(a){var b,c;0<this.getView().getFeatures().getLength()&&(b=this.getView().getFeatures().pop().getGeometry(),c=this.getView().getMapView().getProjection(),this.fireEvent("savearea",Traccar.GeofenceConverter.geometryToWkt(c,b)),a.up("window").close())},onCancelClick:function(a){a.up("window").close()},onTypeSelect:function(a){this.getView().removeInteraction();
this.getView().addInteraction(a.getValue())},setMapState:function(a,b,c){this.getView().getMapView().setCenter(ol.proj.fromLonLat([b,a]));this.getView().getMapView().setZoom(c)}});
Ext.define("Traccar.view.map.GeofenceMap",{extend:Traccar.view.map.BaseMap,xtype:"geofenceMapView",controller:"geofenceMap",bodyBorder:!0,tbar:{items:[{xtype:"combobox",store:"GeofenceTypes",valueField:"key",displayField:"name",editable:!1,listeners:{select:"onTypeSelect"}},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"onCancelClick"}]},
getFeatures:function(){return this.features},initMap:function(){var a,b;this.callParent();a=this.map;this.features=new ol.Collection;this.area?(b=Traccar.GeofenceConverter.wktToGeometry(this.mapView,this.area),this.features.push(new ol.Feature(b)),this.mapView.fit(b)):this.controller.fireEvent("mapstaterequest");b=ol.color.asArray(Traccar.Style.mapGeofenceColor);b[3]=Traccar.Style.mapGeofenceOverlayOpacity;(new ol.layer.Vector({source:new ol.source.Vector({features:this.features}),style:new ol.style.Style({fill:new ol.style.Fill({color:b}),
stroke:new ol.style.Stroke({color:Traccar.Style.mapGeofenceColor,width:Traccar.Style.mapGeofenceWidth}),image:new ol.style.Circle({radius:Traccar.Style.mapGeofenceRadius,fill:new ol.style.Fill({color:Traccar.Style.mapGeofenceColor})})})})).setMap(a);a.addInteraction(new ol.interaction.Modify({features:this.features,deleteCondition:function(a){return ol.events.condition.shiftKeyOnly(a)&&ol.events.condition.singleClick(a)}}))},addInteraction:function(a){this.draw=new ol.interaction.Draw({features:this.features,
type:a});this.draw.on("drawstart",function(){this.features.clear()},this);this.map.addInteraction(this.draw)},removeInteraction:function(){this.draw&&(this.map.removeInteraction(this.draw),this.draw=null)}});
Ext.define("Traccar.view.dialog.GeofenceController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.geofence",config:{listen:{controller:{"*":{savearea:"saveArea"}}}},init:function(){this.lookupReference("calendarCombo").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableCalendars"))},saveArea:function(a){this.lookupReference("areaField").setValue(a)},onAreaClick:function(a){a=a.up("window").down("form").getRecord();Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedArea,
items:{xtype:"geofenceMapView",area:a.get("area")}}).show()}});
Ext.define("Traccar.view.dialog.Geofence",{extend:Traccar.view.dialog.BaseEdit,controller:"geofence",title:Strings.sharedGeofence,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"textfield",name:"description",fieldLabel:Strings.sharedDescription},{xtype:"clearableComboBox",reference:"calendarCombo",name:"calendarId",
store:"Calendars",queryMode:"local",displayField:"name",valueField:"id",fieldLabel:Strings.sharedCalendar},{xtype:"hiddenfield",name:"area",allowBlank:!1,reference:"areaField"}]}]},buttons:[{text:Strings.sharedArea,glyph:"xf21d@FontAwesome",handler:"onAreaClick"},{text:Strings.sharedAttributes,handler:"showAttributesView"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,
tooltipType:"title",minWidth:0,handler:"closeView"}]});Ext.define("Traccar.view.edit.GeofencesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.geofences",objectModel:"Traccar.model.Geofence",objectDialog:"Traccar.view.dialog.Geofence",removeTitle:Strings.sharedGeofence});
Ext.define("Traccar.view.edit.Geofences",{extend:Traccar.view.GridPanel,xtype:"geofencesView",controller:"geofences",store:"Geofences",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.sharedDescription,dataIndex:"description",filter:"string"},{text:Strings.sharedCalendar,dataIndex:"calendarId",hidden:!0,filter:{type:"list",labelField:"name",
store:"AllCalendars"},renderer:Traccar.AttributeFormatter.getFormatter("calendarId")}]}});Ext.define("Traccar.view.dialog.Driver",{extend:Traccar.view.dialog.BaseEdit,title:Strings.sharedDriver,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"textfield",name:"uniqueId",fieldLabel:Strings.deviceIdentifier,allowBlank:!1}]}]}});
Ext.define("Traccar.view.edit.DriversController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.drivers",objectModel:"Traccar.model.Driver",objectDialog:"Traccar.view.dialog.Driver",removeTitle:Strings.sharedDriver});
Ext.define("Traccar.view.edit.Drivers",{extend:Traccar.view.GridPanel,xtype:"driversView",controller:"drivers",store:"Drivers",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.sharedDescription,dataIndex:"uniqueId",filter:"string"}]}});
Ext.define("Traccar.view.dialog.NotificationController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.notification",init:function(){this.lookupReference("calendarCombo").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableCalendars"))}});
Ext.define("Traccar.view.dialog.Notification",{extend:Traccar.view.dialog.BaseEdit,controller:"notification",title:Strings.sharedNotification,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"combobox",name:"type",fieldLabel:Strings.sharedType,store:"AllNotificationTypes",queryMode:"local",displayField:"name",valueField:"type",editable:!1,allowBlank:!1},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"always",fieldLabel:Strings.notificationAlways},
{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"web",fieldLabel:Strings.notificationWeb},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"mail",fieldLabel:Strings.notificationMail},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"sms",fieldLabel:Strings.notificationSms}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"clearableComboBox",reference:"calendarCombo",name:"calendarId",store:"Calendars",queryMode:"local",displayField:"name",
valueField:"id",fieldLabel:Strings.sharedCalendar}]}]}});Ext.define("Traccar.view.edit.NotificationsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.notifications",objectModel:"Traccar.model.Notification",objectDialog:"Traccar.view.dialog.Notification",removeTitle:Strings.sharedNotification});
Ext.define("Traccar.view.edit.Notifications",{extend:Traccar.view.GridPanel,xtype:"notificationsView",controller:"notifications",store:"Notifications",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.notificationType,dataIndex:"type",flex:2,renderer:function(a){return Traccar.app.getEventString(a)},filter:{type:"list",idField:"type",labelField:"name",store:"AllNotificationTypes"}},{text:Strings.notificationAlways,
dataIndex:"always",renderer:Traccar.AttributeFormatter.getFormatter("always"),filter:"boolean"},{text:Strings.notificationWeb,dataIndex:"web",renderer:Traccar.AttributeFormatter.getFormatter("web"),filter:"boolean"},{text:Strings.notificationMail,dataIndex:"mail",renderer:Traccar.AttributeFormatter.getFormatter("mail"),filter:"boolean"},{text:Strings.notificationSms,dataIndex:"sms",renderer:Traccar.AttributeFormatter.getFormatter("sms"),filter:"boolean"},{text:Strings.sharedCalendar,dataIndex:"calendarId",
hidden:!0,filter:{type:"list",labelField:"name",store:"AllCalendars"},renderer:Traccar.AttributeFormatter.getFormatter("calendarId")}]}});Ext.define("Traccar.view.StatisticsController",{extend:Ext.app.ViewController,alias:"controller.statistics",onShowClick:function(){Ext.getStore("Statistics").load({params:{from:this.lookupReference("fromDateField").getValue().toISOString(),to:this.lookupReference("toDateField").getValue().toISOString()}})}});
Ext.define("Traccar.view.Statistics",{extend:Traccar.view.GridPanel,xtype:"statisticsView",controller:"statistics",store:"Statistics",tbar:{scrollable:!0,items:[{xtype:"tbtext",html:Strings.reportFrom},{xtype:"datefield",reference:"fromDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-864E5)},"-",{xtype:"tbtext",html:Strings.reportTo},{xtype:"datefield",reference:"toDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,
value:new Date},"-",{text:Strings.reportShow,handler:"onShowClick"}]},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.statisticsCaptureTime,dataIndex:"captureTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.defaultFormatter()},{text:Strings.statisticsActiveUsers,dataIndex:"activeUsers"},{text:Strings.statisticsActiveDevices,dataIndex:"activeDevices"},{text:Strings.statisticsRequests,dataIndex:"requests"},{text:Strings.statisticsMessagesReceived,
dataIndex:"messagesReceived"},{text:Strings.statisticsMessagesStored,dataIndex:"messagesStored"},{text:Strings.notificationMail,dataIndex:"mailSent"},{text:Strings.notificationSms,dataIndex:"smsSent"},{text:Strings.statisticsGeocoder,dataIndex:"geocoderRequests"},{text:Strings.statisticsGeolocation,dataIndex:"geolocationRequests"}]}});
Ext.define("Traccar.view.dialog.DeviceDistanceController",{extend:Ext.app.ViewController,alias:"controller.deviceDistance",onSetClick:function(){var a={deviceId:this.getView().deviceId,totalDistance:this.lookupReference("totalDistance").getValue()};Ext.Ajax.request({scope:this,method:"PUT",url:"api/devices/"+a.deviceId+"/distance",jsonData:Ext.util.JSON.encode(a),callback:function(a,c,d){c||Traccar.app.showError(d)}});this.closeView()}});
Ext.define("Traccar.view.dialog.DeviceDistance",{extend:Traccar.view.dialog.Base,controller:"deviceDistance",title:Strings.sharedDeviceDistance,items:[{xtype:"customNumberField",dataType:"distance",reference:"totalDistance",fieldLabel:Strings.deviceTotalDistance}],buttons:[{reference:"setButton",glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSet,tooltipType:"title",minWidth:0,handler:"onSetClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.CalendarController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.calendar",onFileChange:function(a){var b;0<a.fileInputEl.dom.files.length&&(b=new FileReader,b.onload=function(b){a.up("window").lookupReference("dataField").setValue(b.target.result.substr(b.target.result.indexOf(",")+1))},b.onerror=function(a){Traccar.app.showError(a.target.error)},b.readAsDataURL(a.fileInputEl.dom.files[0]))}});
Ext.define("Traccar.view.dialog.Calendar",{extend:Traccar.view.dialog.BaseEdit,controller:"calendar",title:Strings.sharedCalendar,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"filefield",name:"file",fieldLabel:Strings.sharedFile,allowBlank:!1,buttonConfig:{glyph:"xf093@FontAwesome",text:"",tooltip:Strings.sharedSelectFile,tooltipType:"title",minWidth:0},listeners:{change:"onFileChange"}}]},
{xtype:"hiddenfield",name:"data",allowBlank:!1,reference:"dataField"}]}});Ext.define("Traccar.view.edit.CalendarsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.calendars",objectModel:"Traccar.model.Calendar",objectDialog:"Traccar.view.dialog.Calendar",removeTitle:Strings.sharedCalendar});
Ext.define("Traccar.view.edit.Calendars",{extend:Traccar.view.GridPanel,xtype:"calendarsView",controller:"calendars",store:"Calendars",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"}]}});
Ext.define("Traccar.view.dialog.SavedCommand",{extend:Traccar.view.dialog.BaseEdit,controller:"savedCommand",title:Strings.sharedSavedCommand,items:[{xtype:"form",listeners:{validitychange:"onValidityChange"},items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"description",fieldLabel:Strings.sharedDescription},{xtype:"checkboxfield",name:"textChannel",inputValue:!0,uncheckedValue:!1,fieldLabel:Strings.notificationSms},{xtype:"combobox",name:"type",reference:"commandType",
fieldLabel:Strings.sharedType,store:"AllCommandTypes",queryMode:"local",displayField:"name",valueField:"type",editable:!1,allowBlank:!1,listeners:{change:"onTypeChange"}},{xtype:"fieldcontainer",reference:"parameters"}]}]}],buttons:[{glyph:"xf00c@FontAwesome",reference:"saveButton",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,disabled:!0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.edit.SavedCommandsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.savedCommands",objectModel:"Traccar.model.Command",objectDialog:"Traccar.view.dialog.SavedCommand",removeTitle:Strings.sharedSavedCommand});
Ext.define("Traccar.view.edit.SavedCommands",{extend:Traccar.view.GridPanel,xtype:"savedCommandsView",controller:"savedCommands",store:"Commands",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedDescription,dataIndex:"description",filter:"string"},{text:Strings.sharedType,dataIndex:"type",filter:{type:"list",idField:"type",labelField:"name",store:"AllCommandTypes"},renderer:Traccar.AttributeFormatter.getFormatter("commandType")},
{text:Strings.notificationSms,dataIndex:"textChannel",renderer:Traccar.AttributeFormatter.getFormatter("textChannel"),filter:"boolean"}]}});
Ext.define("Traccar.view.dialog.MaintenanceController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.maintenance",init:function(){this.startConfig=Ext.clone(this.lookupReference("startField").initialConfig);this.startConfig.value=0;this.periodConfig=Ext.clone(this.lookupReference("periodField").initialConfig);this.periodConfig.value=0;this.lookupReference("saveButton").setDisabled(!0)},onValidityChange:function(a,b){this.lookupReference("saveButton").setDisabled(!b)},updateFieldConfig:function(a,
b,c){var d=this.lookupReference(a);d.dataType!==c.dataType?(this.getView().down("fieldset").insert(this.getView().down("fieldset").items.indexOf(d),Ext.merge({},b,c)),this.getView().down("fieldset").remove(d),this.lookupReference(a).validate()):(d.setConfig(c),d.validate())},onNameChange:function(a,b){var c={};if(a=a.getStore().getById(b))void 0!==a.get("allowDecimals")?c.allowDecimals=a.get("allowDecimals"):c.allowDecimals=!0,c.dataType=a.get("dataType"),c.maxValue=a.get("maxValue"),c.minValue=a.get("minValue");
this.updateFieldConfig("startField",this.startConfig,c);this.updateFieldConfig("periodField",this.periodConfig,c)}});
Ext.define("Traccar.view.dialog.Maintenance",{extend:Traccar.view.dialog.BaseEdit,controller:"maintenance",title:Strings.sharedMaintenance,items:{xtype:"form",listeners:{validitychange:"onValidityChange"},items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"combobox",name:"type",reference:"typeComboField",fieldLabel:Strings.sharedType,displayField:"name",valueField:"key",allowBlank:!1,queryMode:"local",store:"MaintenanceTypes",
listeners:{change:"onNameChange"}},{xtype:"customNumberField",name:"start",reference:"startField",fieldLabel:Strings.maintenanceStart},{xtype:"customNumberField",name:"period",reference:"periodField",allowBlank:!1,fieldLabel:Strings.maintenancePeriod,validator:function(a){return 0!==this.parseValue(a)?!0:Strings.errorZero}}]}]}});
Ext.define("Traccar.view.edit.MaintenancesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.maintenances",objectModel:"Traccar.model.Maintenance",objectDialog:"Traccar.view.dialog.Maintenance",removeTitle:Strings.sharedMaintenance});
Ext.define("Traccar.view.edit.Maintenances",{extend:Traccar.view.GridPanel,xtype:"maintenancesView",controller:"maintenances",store:"Maintenances",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.sharedType,dataIndex:"type",filter:{type:"list",idField:"key",labelField:"name",store:"MaintenanceTypes"},renderer:function(a){var b=
Ext.getStore("MaintenanceTypes").getById(a);return b&&b.get("name")||a}},{text:Strings.maintenanceStart,dataIndex:"start",renderer:function(a,b,c){return Traccar.AttributeFormatter.renderAttribute(a,Ext.getStore("MaintenanceTypes").getById(c.get("type")))}},{text:Strings.maintenancePeriod,dataIndex:"period",renderer:function(a,b,c){return Traccar.AttributeFormatter.renderAttribute(a,Ext.getStore("MaintenanceTypes").getById(c.get("type")))}}]}});
Ext.define("Traccar.view.SettingsMenuController",{extend:Ext.app.ViewController,alias:"controller.settings",init:function(){var a,b,c,d;a=Traccar.app.getUser().get("administrator");b=0!==Traccar.app.getUser().get("userLimit");c=Traccar.app.getPreference("readonly",!1);d=Traccar.app.getUser().get("deviceReadonly");a&&(this.lookupReference("settingsServerButton").setHidden(!1),this.lookupReference("settingsStatisticsButton").setHidden(!1));(a||b)&&this.lookupReference("settingsUsersButton").setHidden(!1);
if(a||!c)this.lookupReference("settingsUserButton").setHidden(!1),this.lookupReference("settingsGroupsButton").setHidden(!1),this.lookupReference("settingsGeofencesButton").setHidden(!1),this.lookupReference("settingsNotificationsButton").setHidden(!1),this.lookupReference("settingsCalendarsButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableCalendars")),this.lookupReference("settingsDriversButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableDrivers")),
this.lookupReference("settingsCommandsButton").setHidden(Traccar.app.getPreference("limitCommands",!1)),this.lookupReference("settingsMaintenancesButton").setHidden(Traccar.app.getVehicleFeaturesDisabled()||Traccar.app.getBooleanAttributePreference("ui.disableMaintenances"));(a||!d&&!c)&&this.lookupReference("settingsComputedAttributesButton").setHidden(Traccar.app.getBooleanAttributePreference("ui.disableComputedAttributes"))},onUserClick:function(){var a=Ext.create("Traccar.view.dialog.User",{selfEdit:!0});
a.down("form").loadRecord(Traccar.app.getUser());a.lookupReference("testNotificationButton").setHidden(!1);a.show()},onGroupsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsGroups,items:{xtype:"groupsView"}}).show()},onGeofencesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"geofencesView"}}).show()},onServerClick:function(){var a=Ext.create("Traccar.view.dialog.Server");a.down("form").loadRecord(Traccar.app.getServer());
a.show()},onUsersClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsUsers,items:{xtype:"usersView"}}).show()},onNotificationsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedNotifications,items:{xtype:"notificationsView"}}).show()},onComputedAttributesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedComputedAttributes,items:{xtype:"computedAttributesView"}}).show()},onStatisticsClick:function(){Ext.create("Traccar.view.BaseWindow",
{title:Strings.statisticsTitle,items:{xtype:"statisticsView"}}).show()},onCalendarsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedCalendars,items:{xtype:"calendarsView"}}).show()},onDriversClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedDrivers,items:{xtype:"driversView"}}).show()},onCommandsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedSavedCommands,items:{xtype:"savedCommandsView"}}).show()},onMaintenancesClick:function(){Ext.create("Traccar.view.BaseWindow",
{title:Strings.sharedMaintenances,items:{xtype:"maintenancesView"}}).show()},onLogoutClick:function(){Ext.create("Traccar.view.dialog.LoginController").logout()}});
Ext.define("Traccar.view.SettingsMenu",{extend:Ext.button.Button,xtype:"settingsMenu",glyph:"xf013@FontAwesome",tooltip:Strings.settingsTitle,tooltipType:"title",menu:{controller:"settings",items:[{hidden:!0,text:Strings.settingsUser,glyph:"xf007@FontAwesome",handler:"onUserClick",reference:"settingsUserButton"},{hidden:!0,text:Strings.settingsGroups,glyph:"xf247@FontAwesome",handler:"onGroupsClick",reference:"settingsGroupsButton"},{hidden:!0,text:Strings.sharedDrivers,glyph:"xf2c2@FontAwesome",
handler:"onDriversClick",reference:"settingsDriversButton"},{hidden:!0,text:Strings.sharedGeofences,glyph:"xf21d@FontAwesome",handler:"onGeofencesClick",reference:"settingsGeofencesButton"},{hidden:!0,text:Strings.settingsServer,glyph:"xf233@FontAwesome",handler:"onServerClick",reference:"settingsServerButton"},{hidden:!0,text:Strings.settingsUsers,glyph:"xf0c0@FontAwesome",handler:"onUsersClick",reference:"settingsUsersButton"},{hidden:!0,text:Strings.sharedNotifications,glyph:"xf003@FontAwesome",
handler:"onNotificationsClick",reference:"settingsNotificationsButton"},{hidden:!0,text:Strings.sharedComputedAttributes,glyph:"xf0ae@FontAwesome",handler:"onComputedAttributesClick",reference:"settingsComputedAttributesButton"},{hidden:!0,text:Strings.statisticsTitle,glyph:"xf080@FontAwesome",handler:"onStatisticsClick",reference:"settingsStatisticsButton"},{hidden:!0,text:Strings.sharedCalendars,glyph:"xf073@FontAwesome",handler:"onCalendarsClick",reference:"settingsCalendarsButton"},{hidden:!0,
text:Strings.sharedSavedCommands,glyph:"xf093@FontAwesome",handler:"onCommandsClick",reference:"settingsCommandsButton"},{hidden:!0,text:Strings.sharedMaintenances,glyph:"xf0ad@FontAwesome",handler:"onMaintenancesClick",reference:"settingsMaintenancesButton"},{text:Strings.loginLogout,glyph:"xf08b@FontAwesome",handler:"onLogoutClick"}]}});
Ext.define("Traccar.view.map.Map",{extend:Traccar.view.map.BaseMap,xtype:"mapView",controller:"map",title:Strings.mapTitle,tbar:{componentCls:"toolbar-header-style",defaults:{xtype:"button",tooltipType:"title",stateEvents:["toggle"],enableToggle:!0,stateful:{pressed:!0}},items:[{xtype:"tbtext",html:Strings.mapTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{handler:"showReports",reference:"showReportsButton",glyph:"xf0f6@FontAwesome",stateful:!1,enableToggle:!1,tooltip:Strings.reportTitle},
{handler:"showEvents",reference:"showEventsButton",glyph:"xf27b@FontAwesome",stateful:!1,enableToggle:!1,tooltip:Strings.reportEvents},{handler:"updateGeofences",reference:"showGeofencesButton",glyph:"xf21d@FontAwesome",pressed:!0,stateId:"show-geofences-button",tooltip:Strings.sharedGeofences},{handler:"showLiveRoutes",reference:"showLiveRoutes",glyph:"xf1b0@FontAwesome",stateId:"show-live-routes-button",tooltip:Strings.mapLiveRoutes},{reference:"deviceFollowButton",glyph:"xf05b@FontAwesome",tooltip:Strings.deviceFollow,
stateId:"device-follow-button",toggleHandler:"onFollowClick"},{xtype:"settingsMenu",enableToggle:!1}]},getMarkersSource:function(){return this.markersSource},getAccuracySource:function(){return this.accuracySource},getRouteSource:function(){return this.routeSource},getGeofencesSource:function(){return this.geofencesSource},getLiveRouteSource:function(){return this.liveRouteSource},getLiveRouteLayer:function(){return this.liveRouteLayer},initMap:function(){this.callParent();this.geofencesSource=new ol.source.Vector({});
this.map.addLayer(new ol.layer.Vector({name:"geofencesLayer",source:this.geofencesSource}));this.liveRouteSource=new ol.source.Vector({});this.liveRouteLayer=new ol.layer.Vector({source:this.liveRouteSource,visible:this.lookupReference("showLiveRoutes").pressed});this.map.addLayer(this.liveRouteLayer);this.routeSource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({source:this.routeSource}));this.accuracySource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({name:"accuracyLayer",
source:this.accuracySource}));this.markersSource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({source:this.markersSource}))}});
Ext.define("Traccar.view.Main",{extend:Ext.container.Viewport,alias:"widget.main",controller:"mainController",layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"west",layout:"border",width:Traccar.Style.deviceWidth,title:Strings.devicesAndState,titleCollapse:!0,floatable:!1,stateful:!0,stateId:"devices-and-state-panel",defaults:{split:!0,flex:1},items:[{region:"center",xtype:"devicesView"},{region:"south",xtype:"stateView"}]},{region:"south",xtype:"reportView",reference:"reportView",
height:Traccar.Style.reportHeight,collapsed:!0,titleCollapse:!0,floatable:!1},{region:"center",xtype:"mapView",collapsible:!1},{region:"east",xtype:"eventsView",reference:"eventsView",width:Traccar.Style.deviceWidth,collapsed:!0,titleCollapse:!0,floatable:!1}]});
Ext.define("Traccar.view.MainMobile",{extend:Ext.container.Viewport,alias:"widget.mainMobile",id:"rootPanel",layout:"card",items:[{layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"east",xtype:"stateView",title:Strings.stateTitle,flex:4,collapsed:!0,collapseMode:"mini",titleCollapse:!0,floatable:!1,stateId:"mobile-state-grid"},{region:"center",xtype:"mapView",collapsible:!1,flex:2},{region:"south",xtype:"devicesView",title:Strings.deviceTitle,flex:1,collapsed:!0,titleCollapse:!0,
floatable:!1,stateId:"mobile-devices-grid"}]},{xtype:"reportView"},{xtype:"eventsView"}]});
Ext.define("Traccar.controller.Root",{extend:Ext.app.Controller,alias:"controller.root",init:function(){var a,b,c,d,e;d=Ext.getStore("ReportChartTypes");e=Ext.getStore("MaintenanceTypes");Ext.state.Manager.setProvider(new Ext.state.CookieProvider);b=Ext.getStore("PositionAttributes").getData().items;for(a=0;a<b.length;a++)c=b[a],Traccar.model.Position.addFields([{name:"attribute."+c.get("key"),attributeKey:c.get("key"),calculate:this.calculateAttribute,persist:!1}]),"number"===c.get("valueType")&&
(d.add({key:"attribute."+c.get("key"),name:c.get("name")}),e.add(c))},calculateAttribute:function(a){a=a.attributes[this.attributeKey];return void 0!==a?Traccar.AttributeFormatter.getAttributeConverter(this.attributeKey)(a):a},onLaunch:function(){Ext.Ajax.request({scope:this,url:"api/server",callback:this.onServerReturn})},onServerReturn:function(a,b,c){a={};if(b){Traccar.app.setServer(Ext.decode(c.responseText));if(b=Ext.Object.fromQueryString(window.location.search).token)a.token=b;Ext.Ajax.request({scope:this,
url:"api/session",method:"GET",params:a,callback:this.onSessionReturn})}else Traccar.app.showError(c)},onSessionReturn:function(a,b,c){Ext.get("spinner").setVisible(!1);b?(Traccar.app.setUser(Ext.decode(c.responseText)),this.loadApp()):(this.login=Ext.create("widget.login",{listeners:{scope:this,login:this.onLogin}}),this.login.show())},onLogin:function(){this.login.close();this.loadApp()},loadApp:function(){var a;Ext.getStore("Groups").load();Ext.getStore("Drivers").load();Ext.getStore("Geofences").load();
Ext.getStore("Calendars").load();Ext.getStore("Maintenances").load();Ext.getStore("ComputedAttributes").load();Ext.getStore("AllCommandTypes").load();Ext.getStore("Commands").load();Ext.getStore("AllNotificationTypes").load({callback:function(a,c,d){c=Ext.getStore("ReportEventTypes");d&&(c.add({type:Traccar.store.ReportEventTypes.allEvents,name:Strings.eventAll}),c.loadData(a,!0))}});Ext.getStore("Notifications").load();Ext.getStore("ServerAttributes").loadData(Ext.getStore("CommonDeviceAttributes").getData().items,
!0);Ext.getStore("ServerAttributes").loadData(Ext.getStore("CommonUserAttributes").getData().items,!0);Ext.getStore("UserAttributes").loadData(Ext.getStore("CommonUserAttributes").getData().items,!0);Ext.getStore("DeviceAttributes").loadData(Ext.getStore("CommonDeviceAttributes").getData().items,!0);Ext.getStore("GroupAttributes").loadData(Ext.getStore("CommonDeviceAttributes").getData().items,!0);Ext.getStore("Devices").load({scope:this,callback:function(){this.asyncUpdate(!0)}});(a=Ext.get("attribution"))&&
a.remove();Traccar.app.isMobile()?Ext.create("widget.mainMobile"):Ext.create("widget.main");if(a=Ext.Object.fromQueryString(window.location.search).eventId)this.fireEvent("showsingleevent",a),this.removeUrlParameter("eventId")},beep:function(){this.beepSound||(this.beepSound=new Audio("beep.wav"));this.beepSound.play()},soundPressed:function(){var a=Ext.getCmp("soundButton");return a&&a.pressed},removeUrlParameter:function(a){var b=Ext.Object.fromQueryString(window.location.search);delete b[a];Ext.Object.isEmpty(b)?
window.history.pushState(null,null,window.location.pathname):window.history.pushState(null,null,window.location.pathname+"?"+Ext.Object.toQueryString(b))},asyncUpdate:function(a){var b=this,c,d;c="https:"===window.location.protocol?"wss:":"ws:";d=window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/")+1);c=new WebSocket(c+"//"+window.location.host+d+"api/socket");c.onclose=function(){Traccar.app.showToast(Strings.errorSocket,Strings.errorTitle);Ext.Ajax.request({url:"api/devices",
success:function(a){b.updateDevices(Ext.decode(a.responseText))},failure:function(a){401===a.status&&window.location.reload()}});Ext.Ajax.request({url:"api/positions",headers:{Accept:"application/json"},success:function(a){b.updatePositions(Ext.decode(a.responseText))}});setTimeout(function(){b.asyncUpdate(!1)},Traccar.Style.reconnectTimeout)};c.onmessage=function(c){c=Ext.decode(c.data);c.devices&&b.updateDevices(c.devices);c.positions&&(b.updatePositions(c.positions,a),a=!1);c.events&&b.updateEvents(c.events)}},
updateDevices:function(a){var b,c,d;c=Ext.getStore("Devices");for(b=0;b<a.length;b++)(d=c.getById(a[b].id))&&d.set({status:a[b].status,lastUpdate:a[b].lastUpdate,geofenceIds:a[b].geofenceIds},{dirty:!1})},updatePositions:function(a,b){var c,d,e,f;d=Ext.getStore("LatestPositions");for(c=0;c<a.length;c++)(e=d.findRecord("deviceId",a[c].deviceId,0,!1,!1,!0))?e.set(a[c]):d.add(Ext.create("Traccar.model.Position",a[c])),Ext.getStore("Events").findRecord("positionId",a[c].id,0,!1,!1,!0)&&Ext.getStore("EventPositions").add(Ext.create("Traccar.model.Position",
a[c]));b&&((a=Ext.Object.fromQueryString(window.location.search).deviceId)&&(f=Ext.getStore("VisibleDevices").findRecord("id",a,0,!1,!0,!0))&&this.fireEvent("selectdevice",f,!0),f||this.zoomToAllDevices())},updateEvents:function(a){var b,c,d;c=Ext.getStore("Events");for(b=0;b<a.length;b++)if(c.add(a[b]),d=Ext.getStore("Devices").getById(a[b].deviceId))this.soundPressed()&&this.beep(),Traccar.app.showToast(a[b].text,d.get("name"))},zoomToAllDevices:function(){var a,b,c;a=Traccar.app.getPreference("latitude",
0);b=Traccar.app.getPreference("longitude",0);c=Traccar.app.getPreference("zoom",0);0===a&&0===b&&0===c&&this.fireEvent("zoomtoalldevices")}});
Ext.define("Traccar.Application",{extend:Ext.app.Application,name:"Traccar",models:"Server User Group Device Position Attribute Command Event Geofence Notification ReportSummary ReportTrip ReportStop Calendar KnownAttribute Driver KnownCommand KnownNotification Maintenance".split(" "),stores:"Groups Devices AllGroups AllDevices Positions LatestPositions EventPositions Users Attributes MapTypes DistanceUnits SpeedUnits CoordinateFormats CommandTypes TimeUnits Languages Events Geofences AllGeofences Notifications AllNotifications GeofenceTypes ReportRoute ReportEvents ReportTrips ReportStops ReportSummary ReportTypes ReportEventTypes ReportChartTypes ReportPeriods Statistics DeviceImages Calendars AllCalendars AllTimezones VisibleDevices DeviceStatuses CommonDeviceAttributes DeviceAttributes GeofenceAttributes GroupAttributes ServerAttributes CommonUserAttributes UserAttributes ComputedAttributes AllComputedAttributes PositionAttributes AttributeValueTypes Drivers AllDrivers KnownCommands VolumeUnits AllCommandTypes Commands AllCommands DeviceCommands AllNotificationTypes Maintenances AllMaintenances MaintenanceTypes".split(" "),controllers:["Root"],
isMobile:function(){return window.matchMedia&&window.matchMedia("(max-width: 768px)").matches},getVehicleFeaturesDisabled:function(){return this.getBooleanAttributePreference("ui.disableVehicleFetures")},getEventString:function(a){a="event"+a.charAt(0).toUpperCase()+a.slice(1);return Strings[a]||a},showReports:function(a){var b=Ext.getCmp("rootPanel");b&&b.setActiveItem(a?1:0)},showEvents:function(a){var b=Ext.getCmp("rootPanel");b&&b.setActiveItem(a?2:0)},setUser:function(a){this.user=Ext.create("Ext.data.reader.Json",
{model:"Traccar.model.User"}).readRecords(a).getRecords()[0]},getUser:function(){return this.user},setServer:function(a){this.server=Ext.create("Ext.data.reader.Json",{model:"Traccar.model.Server"}).readRecords(a).getRecords()[0]},getServer:function(){return this.server},getPreference:function(a,b){return this.getServer().get("forceSettings")?this.getServer().get(a)||this.getUser().get(a)||b:this.getUser().get(a)||this.getServer().get(a)||b},getAttributePreference:function(a,b){return this.getServer().get("forceSettings")?
this.getServer().get("attributes")[a]||this.getUser().get("attributes")[a]||b:this.getUser().get("attributes")[a]||this.getServer().get("attributes")[a]||b},getBooleanAttributePreference:function(a){return"true"===this.getAttributePreference(a,!1).toString()},getReportColor:function(a){var b,c=Ext.getStore("Devices").getById(a);c&&(b=c.get("attributes")["web.reportColor"]);if(b)return b;b=0;void 0!==a&&(b=a%Traccar.Style.mapRouteColor.length);return Traccar.Style.mapRouteColor[b]},showError:function(a){Ext.isString(a)?
Ext.Msg.alert(Strings.errorTitle,a):a.responseText?Ext.Msg.alert(Strings.errorTitle,Strings.errorGeneral+'\x3cbr\x3e\x3cbr\x3e\x3ctextarea readonly rows\x3d"5" style\x3d"resize: none; width: 100%;"\x3e'+a.responseText+"\x3c/textarea\x3e"):a.statusText?Ext.Msg.alert(Strings.errorTitle,a.statusText):Ext.Msg.alert(Strings.errorTitle,Strings.errorConnection)},showToast:function(a,b){Ext.toast({html:a,title:b,width:Traccar.Style.toastWidth,align:"br"})}});Ext.application({name:"Traccar",extend:Traccar.Application});